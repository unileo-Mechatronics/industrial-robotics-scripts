(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    146356,       2964]
NotebookOptionsPosition[    141394,       2880]
NotebookOutlinePosition[    141782,       2896]
CellTagsIndexPosition[    141739,       2893]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
First lecture - Mathematica recap
\
\>", "Section",
 CellChangeTimes->{{3.9670875642262917`*^9, 
  3.967087572623549*^9}},ExpressionUUID->"f7b6a2c8-89db-405b-843c-\
8caa18256170"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.96709021851236*^9, 3.967090265350938*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"b45454e5-9f7b-416a-808a-1c1b2263bcec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", " ", "5"}]], "Code",
 CellChangeTimes->{{3.967087601858522*^9, 3.967087605243067*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"8cbfe90c-3d98-4a8a-9d95-a18f7c4dc40e"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.967087609012175*^9, 3.967087609257209*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"7d28bb19-ea3d-47be-b83c-5872f7779d9c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", "5"}], ";"}]], "Input",
 CellChangeTimes->{{3.967087617850856*^9, 3.967087622303446*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"7328dd7f-b1cc-4c7a-b2ff-e6831860e4f5"],

Cell["", "Text",ExpressionUUID->"6627f1ba-f703-43cf-93f2-3f797db453c6"],

Cell["\<\
The assignement of variable cna be \[OpenCurlyDoubleQuote]set assignement\
\[CloseCurlyDoubleQuote] as the last one or the \[OpenCurlyDoubleQuote]set \
delay\[CloseCurlyDoubleQuote] (something like that) that is handy when we use \
functions. It evaluates the variable when we call it, not everytime like \
using hte set assignement
\
\>", "Text",
 CellChangeTimes->{{3.967087649238092*^9, 3.9670876780233994`*^9}, {
  3.967087710509617*^9, 
  3.967087756320958*^9}},ExpressionUUID->"99fc19e5-4790-4dd9-b3c6-\
3907dfff341b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"r", " ", ":=", " ", 
  RowBox[{"RandomReal", "[", "]"}]}], "\n", "r", "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"r", ",", " ", "\"\< \>\"", ",", " ", "a"}], "]"}]}], "Code",
 CellChangeTimes->{{3.967087694530437*^9, 3.967087722024747*^9}, {
  3.96708780388726*^9, 
  3.9670878219460583`*^9}},ExpressionUUID->"a18ffb66-d8c0-4f2c-9feb-\
f33b1a65f7c0"],

Cell[BoxData["0.9249776992263028`"], "Output",
 CellChangeTimes->{3.967087724119569*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0cec3b8b-3a5b-4ab9-9cf6-6c9860c157c5"]
}, Open  ]],

Cell["\<\
We can define vectors using curly brackets and separating numbers with a \
comma. For wolfram there are no differences between row vector and column \
vector. There is the function matrixform in roder to check better the matrix \
visually. Call it using MatrixForm[A] or A // MatrixForm, \
it\[CloseCurlyQuote]s the same.
For the moltiplication, the dot is the symbol\
\>", "Text",
 CellChangeTimes->{{3.967087830669347*^9, 3.967087872713146*^9}, {
  3.967087972692868*^9, 3.967088025308557*^9}, {3.967088258806159*^9, 
  3.967088267403638*^9}},ExpressionUUID->"68d47afa-4370-4aac-b04d-\
bbdf62185b6a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"4", ",", " ", "5", ",", " ", "6"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"8", ",", " ", "8", ",", " ", "9"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "A", "]"}], ";"}], "\n", 
 RowBox[{"A", " ", "//", " ", "MatrixForm"}], "\n", 
 RowBox[{"Det", "[", "A", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Amin", " ", "=", " ", 
    RowBox[{"Inverse", "[", "A", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Amin", " ", "//", " ", "MatrixForm"}], "\n", 
 RowBox[{
  RowBox[{"Atransp", " ", "=", " ", 
   RowBox[{"Transpose", "[", "A", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Atransp", " ", "//", " ", "MatrixForm"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"A", ".", "v"}], " ", "//", " ", "MatrixForm"}]}], "Code",
 CellChangeTimes->{{3.967087875930081*^9, 3.9670878797287073`*^9}, {
  3.96708794483095*^9, 3.967088033809895*^9}, {3.967088071672947*^9, 
  3.967088186306587*^9}, {3.967088242421979*^9, 3.967088279042873*^9}, {
  3.967088388679347*^9, 
  3.967088392650738*^9}},ExpressionUUID->"465a2140-4587-464c-a859-\
e2c9ea6b80a1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"},
     {"8", "8", "9"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.967088006472227*^9, {3.96708810437556*^9, 3.967088146396446*^9}, 
   3.96708818737891*^9, 3.967088279887527*^9},
 CellLabel->
  "Out[50]//MatrixForm=",ExpressionUUID->"f68eb540-2ee6-43c3-b5e1-\
c99c2c7c08f3"],

Cell[BoxData[
 RowBox[{"-", "3"}]], "Output",
 CellChangeTimes->{
  3.967088006472227*^9, {3.96708810437556*^9, 3.967088146396446*^9}, 
   3.96708818737891*^9, 3.9670882798881598`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"b3dfe93d-18f5-4b2b-b7c0-c79e7ce5784a"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "2"}], "1"},
     {
      RowBox[{"-", "4"}], "5", 
      RowBox[{"-", "2"}]},
     {
      FractionBox["8", "3"], 
      RowBox[{"-", 
       FractionBox["8", "3"]}], "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.967088006472227*^9, {3.96708810437556*^9, 3.967088146396446*^9}, 
   3.96708818737891*^9, 3.96708827988878*^9},
 CellLabel->
  "Out[53]//MatrixForm=",ExpressionUUID->"d19b03fc-7741-4267-a25d-\
6dde69150ea6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "4", "8"},
     {"2", "5", "8"},
     {"3", "6", "9"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.967088006472227*^9, {3.96708810437556*^9, 3.967088146396446*^9}, 
   3.96708818737891*^9, 3.967088279889428*^9},
 CellLabel->
  "Out[55]//MatrixForm=",ExpressionUUID->"14f39e49-bf9a-4fa5-997a-\
4a76772d19ea"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"14"},
      {"32"},
      {"51"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.967088006472227*^9, {3.96708810437556*^9, 3.967088146396446*^9}, 
   3.96708818737891*^9, 3.967088279890044*^9},
 CellLabel->
  "Out[56]//MatrixForm=",ExpressionUUID->"7dd66d6b-cee8-4d86-b116-\
e384111443ca"]
}, Open  ]],

Cell["There is a way to draw manipiulators here", "Text",
 CellChangeTimes->{{3.9670883983371973`*^9, 
  3.967088409916772*^9}},ExpressionUUID->"67116ff6-04ad-4e1d-a3dd-\
87e1e148837d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", "\n", " ", 
  RowBox[{
   RowBox[{"{", "\n", "   ", 
    RowBox[{
     RowBox[{"Thickness", "[", "0.01", "]"}], ",", "\n", "   ", "Red", ",", 
     "\n", "   ", 
     RowBox[{"Arrowheads", "[", "0.07", "]"}], ",", "\n", "   ", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], "}"}], "]"}], ",",
      "\n", "   ", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<vector\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "2", ",", " ", "3"}], "}"}]}], "]"}]}], "\n", 
    " ", "}"}], ",", "\n", " ", 
   RowBox[{"Axes", " ", "->", " ", "True"}], ",", "\n", " ", 
   RowBox[{"PlotRange", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "4"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "4"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "4"}], "}"}]}], "}"}]}]}], "\n", "]"}]], "Code",\

 CellChangeTimes->{{3.9670884182147093`*^9, 3.9670885302921886`*^9}, {
   3.9670885939910316`*^9, 3.9670886238129063`*^9}, {3.967088653887101*^9, 
   3.967088687812427*^9}, {3.967088739710636*^9, 3.967088819411252*^9}, {
   3.967088909653616*^9, 3.9670889198010397`*^9}, {3.9670889700391893`*^9, 
   3.967088971581341*^9}, 3.967089235920339*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"0a1ad94e-2fc8-4706-82ae-8cf6f0d696c8"],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[1, 0, 0], Thickness[0.01], Arrowheads[0.07], 
   Arrow3DBox[{{0, 0, 0}, {1, 2, 3}}], Text3DBox["\<\"vector\"\>", {1, 2, 3}]},
  Axes->True,
  ImageSize->{358.84241932928785`, 351.2008661566875},
  ImageSizeRaw->Automatic,
  PlotRange->{{0, 4}, {0, 4}, {0, 4}},
  ViewPoint->{2.050115366648729, -1.5776656418883872`, 2.1812835913369106`},
  ViewVertical->{0.2645129740278955, 0.18286030511054066`, 
   0.9468870024378824}]], "Output",
 CellChangeTimes->{3.967088789680451*^9, 3.9670888205266027`*^9, 
  3.967088975350789*^9, 3.967089237140006*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"8b94b42f-522d-4dde-9e96-2185f06baa7c"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s define functions, in this case for defining skew \
symmetric matrices. A matrix is skew symmetric if it\[CloseCurlyQuote]s equal \
to the negative of its transpose.
For the function we use the set delay because we don\[CloseCurlyQuote]t want \
to assign the value.  Using [[ to select values in a vector.
A good check for the skew symmetric SkewMat + Transpose[SkewMat] // \
MatrixForm and the result should be all zeros.\
\>", "Text",
 CellChangeTimes->{{3.9670892754338093`*^9, 3.967089325530311*^9}, {
  3.967089463693718*^9, 3.9670894960164824`*^9}, {3.967089593366254*^9, 
  3.96708960421777*^9}, {3.967090030484005*^9, 
  3.967090057415517*^9}},ExpressionUUID->"c4a0116c-3f7e-4a5c-a25f-\
ac2160bf16d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"skew", "[", "w_", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", " ", 
       RowBox[{"-", 
        RowBox[{"w", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", 
       RowBox[{"w", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"w", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", "0", ",", " ", 
       RowBox[{"w", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"w", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
       RowBox[{"-", 
        RowBox[{"w", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Vtest1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "3", ",", " ", 
     RowBox[{"-", "7"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Vtest2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"q", ",", " ", "j", ",", " ", "g"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SkewMat", " ", "=", " ", 
   RowBox[{"skew", "[", "Vtest1", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SkewMat", " ", "//", " ", "MatrixForm"}], " "}], "\n", 
 RowBox[{
  RowBox[{"SkewMatGen2", " ", "=", " ", 
   RowBox[{"skew", "[", "Vtest2", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SkewMatGen2", " ", "//", " ", "MatrixForm"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SkewMat", " ", "+", " ", 
    RowBox[{"Transpose", "[", "SkewMat", "]"}]}], " ", "//", " ", 
   "MatrixForm"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"skew", "[", "Vtest1", "]"}], ".", "Vtest1"}]}], "Code",
 CellChangeTimes->{{3.967089440009913*^9, 3.967089524819759*^9}, {
  3.96708957468748*^9, 3.967089701265253*^9}, {3.967089733900436*^9, 
  3.96708978171939*^9}, {3.9670899432440243`*^9, 3.9670899616526747`*^9}, {
  3.967090014191587*^9, 3.967090028393458*^9}, {3.9670900589872847`*^9, 
  3.9670900858052387`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e55f2e17-525d-47ff-ae5d-50445a8e3588"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "7", "3"},
     {
      RowBox[{"-", "7"}], "0", "1"},
     {
      RowBox[{"-", "3"}], 
      RowBox[{"-", "1"}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.967089702022025*^9, {3.967089774785996*^9, 3.9670897826245527`*^9}, 
   3.9670899624883547`*^9, 3.96709001506839*^9, 3.9670900882868433`*^9, 
   3.967090326041556*^9},
 CellLabel->
  "Out[110]//MatrixForm=",ExpressionUUID->"0c8bc4b1-cbe3-4792-8f70-\
a8b39a099d90"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", "g"}], "j"},
     {"g", "0", "q"},
     {
      RowBox[{"-", "j"}], 
      RowBox[{"-", "q"}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.967089702022025*^9, {3.967089774785996*^9, 3.9670897826245527`*^9}, 
   3.9670899624883547`*^9, 3.96709001506839*^9, 3.9670900882868433`*^9, 
   3.967090326042245*^9},
 CellLabel->
  "Out[112]//MatrixForm=",ExpressionUUID->"e59fc157-6761-46a4-84a9-\
b928c7d37dc9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {"0", "0", "0"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.967089702022025*^9, {3.967089774785996*^9, 3.9670897826245527`*^9}, 
   3.9670899624883547`*^9, 3.96709001506839*^9, 3.9670900882868433`*^9, 
   3.967090326042919*^9},
 CellLabel->
  "Out[113]//MatrixForm=",ExpressionUUID->"bf97da1b-9cb7-4265-89a5-\
ddf50d797539"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"-", "14"}], ",", 
   RowBox[{"-", "6"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.967089702022025*^9, {3.967089774785996*^9, 3.9670897826245527`*^9}, 
   3.9670899624883547`*^9, 3.96709001506839*^9, 3.9670900882868433`*^9, 
   3.967090326043535*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"8705c10d-b8e8-478a-8b14-188c0f5f02c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"v1", ",", " ", "v2", ",", " ", "v3"}], "}"}]}], "\n", 
 RowBox[{"k", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"k1", ",", " ", "k2", ",", " ", "k3"}], "}"}]}], "\n", 
 RowBox[{"z1", " ", "=", " ", 
  RowBox[{"Cross", "[", 
   RowBox[{"v", ",", " ", "k"}], "]"}]}], "\n", 
 RowBox[{"z2", " ", "=", " ", 
  RowBox[{
   RowBox[{"skew", "[", "v", "]"}], ".", "k"}]}], "\n", 
 RowBox[{"z2", "-", "z1"}]}], "Code",
 CellChangeTimes->{{3.96709142320988*^9, 3.967091489237876*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"51bcd520-0a86-4fe8-a18b-c2b7fab377dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}]], "Output",
 CellChangeTimes->{3.967091493465098*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"deab3c4a-1ad2-47d9-aaa6-a95c84e86d32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k1", ",", "k2", ",", "k3"}], "}"}]], "Output",
 CellChangeTimes->{3.967091493466982*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"aa398845-9325-4581-8299-9428c680c88c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"k3", " ", "v2"}], "-", 
    RowBox[{"k2", " ", "v3"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "k3"}], " ", "v1"}], "+", 
    RowBox[{"k1", " ", "v3"}]}], ",", 
   RowBox[{
    RowBox[{"k2", " ", "v1"}], "-", 
    RowBox[{"k1", " ", "v2"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.967091493467601*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"efac51f9-a148-4c69-8e21-fa66e8a31a42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"k3", " ", "v2"}], "-", 
    RowBox[{"k2", " ", "v3"}]}], ",", 
   RowBox[{
    RowBox[{"k3", " ", "v1"}], "+", 
    RowBox[{"k1", " ", "v3"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "k2"}], " ", "v1"}], "-", 
    RowBox[{"k1", " ", "v2"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9670914934683733`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"d4156037-0be5-4f99-b7f3-795d3e48dd8a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"2", " ", "k3", " ", "v1"}], ",", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "k2", " ", "v1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.967091493468996*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"4f2abcab-05b6-438d-8511-2ff14aa91de0"]
}, Open  ]],

Cell["\<\
Solve differential equations. With Solve the result will be displayed as \
fractions, with NSolve it will be displayed numerically. Doing a = x + 5y;
a /. {y -> 2} means that if y is not assigned a is parametric with respect to \
y and we change temporary the value of the parameter y, not globally (?).
We can solve differential equations even with starting conditions with DSolve.

When we make a product between scalars we use *
When we make a product between vectors and matrices we use .\
\>", "Text",
 CellChangeTimes->{{3.9670915504647703`*^9, 3.9670915557500467`*^9}, {
  3.967091661375168*^9, 3.967091683817318*^9}, {3.967091740304701*^9, 
  3.967091768553797*^9}, {3.9670918678417377`*^9, 3.967091905499873*^9}, {
  3.9670924990630293`*^9, 
  3.967092519937626*^9}},ExpressionUUID->"f2fa3828-5345-4256-9956-\
00eb67b317ed"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "2"}], " ", "-", " ", 
      RowBox[{"5", " ", "x"}], " ", "+", " ", "6"}], " ", "==", " ", "0"}], ",",
     " ", "x"}], "]"}], "\n"}], "\n", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", "x"}], " ", "+", " ", "y"}], " ", "==", " ", "10"}], ",", 
     " ", 
     RowBox[{
      RowBox[{"x", " ", "-", " ", "y"}], " ", "==", " ", "1"}]}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "y"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"x", " ", "+", " ", 
    RowBox[{"5", "y"}]}]}], ";"}], "\n", 
 RowBox[{"a", " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{"y", " ", "->", " ", "2"}], "}"}]}]}], "Code",
 CellChangeTimes->{{3.9670915627136917`*^9, 3.967091658187245*^9}, {
  3.967091705861812*^9, 3.967091735391395*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"74f02118-f3f8-45ec-a8ac-40766551f40e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.967091589698204*^9, 3.967091610463656*^9}, {
   3.967091645484737*^9, 3.967091655732218*^9}, 3.9670917733580647`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"3c2f9dc1-7a44-4f19-bc01-f378bd7b1270"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     FractionBox["11", "3"]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["8", "3"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.967091589698204*^9, 3.967091610463656*^9}, {
   3.967091645484737*^9, 3.967091655732218*^9}, 3.9670917733587523`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"20903092-f53d-4c84-9546-bf9b228fde57"],

Cell[BoxData[
 RowBox[{"10", "+", "x"}]], "Output",
 CellChangeTimes->{{3.967091589698204*^9, 3.967091610463656*^9}, {
   3.967091645484737*^9, 3.967091655732218*^9}, 3.9670917733593473`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"3f1c0f4c-e7fa-4167-9103-b14a88e324fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], " ", "==", " ", 
      RowBox[{"-", 
       RowBox[{"x", "[", "t", "]"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], " ", "==", " ", "1"}]}], "}"}], ",", " ", 
   
   RowBox[{"x", "[", "t", "]"}], ",", " ", "t"}], "]"}]], "Code",
 CellChangeTimes->{{3.967091810934267*^9, 3.967091862882784*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"cb5a4b3f-60ad-412d-b48f-fa683314ea36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "t"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.967091896981969*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"9e5bf10a-25d5-46a8-8274-c5eee7d2fb62"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example with RC differential equation", "Subsection",
 CellChangeTimes->{{3.967092309401987*^9, 
  3.967092317219039*^9}},ExpressionUUID->"45405af7-b806-4a09-a5b6-\
50a0f636efa3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"R", " ", "=", " ", "1000"}], ";"}], " ", 
  RowBox[{"(*", "ohm", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Cap", " ", "=", " ", 
    RowBox[{"1.", "*", 
     RowBox[{"10", "^", 
      RowBox[{"-", "6"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", "farad", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"tau", " ", "=", " ", 
   RowBox[{"R", " ", "*", " ", "Cap"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Vin", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{"5", 
    RowBox[{"UnitStep", "[", "t", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eq", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"R", " ", "*", " ", "Cap", " ", "*", " ", 
       RowBox[{
        RowBox[{"Vc", "'"}], "[", "t", "]"}]}], " ", "+", " ", 
      RowBox[{"Vc", "[", "t", "]"}]}], " ", "==", " ", 
     RowBox[{"Vin", "[", "t", "]"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq", ",", " ", 
       RowBox[{
        RowBox[{"Vc", "[", "0", "]"}], " ", "==", " ", "0"}]}], "}"}], ",", 
     " ", 
     RowBox[{"Vc", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", 
       RowBox[{"5", " ", "*", " ", "tau"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vc", "[", "t", "]"}], " ", "/.", "sol"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", 
     RowBox[{"5", " ", "*", " ", "tau"}]}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", " ", "->", " ", 
    RowBox[{"{", "\"\<Vc(t)\>\"", "}"}]}], ",", " ", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<t(s)\>\"", ",", " ", "\"\<Vc(V)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}], "\n"}], "Code",
 CellChangeTimes->{{3.967092335008379*^9, 3.967092350202694*^9}, {
  3.967092383418099*^9, 3.967092393688945*^9}, {3.967092435904731*^9, 
  3.967092455456559*^9}, {3.967092487695253*^9, 3.9670924917484007`*^9}, {
  3.967092523384564*^9, 3.967092797734438*^9}, {3.9670928386173563`*^9, 
  3.967092980977269*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"825beba2-987a-4034-9e37-d3be73a26de4"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJwVzXs01GkYB3CpJSJm3lC7mO6sahd1mtYyz5sR45ZKrdnsDoMZzQzGmJfS
WOSyZaQLO8Iqao+VNpfSbWZqkdZRJnRSlsa1lSjnlJ2oLe3+9o/nfM/nnO/3
PCuipLsExkZGRsHU/Z9Mn5kphYXey0iWKzrjeJZlxdSWXteoWSegp58dlQEr
w1szMzR3WWxdsL43/Disj/cj0Zo+llXSLaYkpALcUswS9mgmWJVj5rrezfXQ
eHBSvF3zjuXTsWXazqQJDB/2TgRozMDytw5JT1Un2LCKnP01yyCuwch8dmIA
1POeHuN0uYD2WnxHc8kU7HVOs5dMbgTuO1n6qxkD3FMfGM0I8gDTnx7wcmX/
QNSxcYGyHEPW/t19rt3/wrRG5lvfywaudtthWGeM/brPb1nC9YOXnTqTav4C
rOrnrlreHgCZgTfO9+0xwTND46kmc8Eg5HOWS96bYstxmqxYuwOCB1VXtpaY
4ZpwxhPb8F0wY6yvsDaY45YAUYt4OhR+zJMI131ugT3r8hp4F/eARXGbux/X
EuPjpY+aOGEQMbL0RWPYYlz9V8b8FtNvYbTJq+rsTiusvHKuVvX7XgheUPbW
3c4az867WtAb9h1Irz5940mscVvr6RQ14kHytvo5QZc1ZsxPUS28HAHPf42o
2GRPw/HhhYMKdSQ4JG7EQbE0nDd92HVAxYfQ/IaishoaFnOSHZKjo0DuuWpA
MULDaX/eX/y9dzS05Mg4rkvpONTJ8WcFPQYeuiWv8fWl432NR8eyB2Ngp51H
81dSOq5LFW7SawXgO5FTzDtFx+qPTEeJUgivC3vZ7mo6fnOLWASIYyF33/AW
/346lmq6btB990Fq/oR71iy1T15pREcioDmMDayyRthRMhzIfy0C28++1rKd
EQ5lFLuPN4uBo5UHnPJEuM1a3PvNUQl4DpLx6u0Iiz1rMm1FceCdzZyNiET4
4drhOxbMeLi8MDtyuxTh+MAsy1DbBHhbwRK/+AFh3Rf2r7ueJcCQofK6hxJh
UUhP4eZGKdzwnip1USFs/0hRnsJJhA5mk3i0AuFnfDOvqfpEkKZHhUyeR/hu
vm5o0XIZ7BhV2jRdQjiw5wyfcUwGuZVDonw1wl9+eOnaaZDBlLB7zqEZ4fUt
icZrYpLAMW5YXNCGcL4gcYWdLgkaVOWx7zoQznPOYHx0k4PQIGi/141w5ZFW
RkGlHJLqclbnPEJ4WXt2/HVTAnctSpgZfQh3xnQvyTEjoOnb6HiCcs48h5s7
FhFgvY+eq6T8yuOa+eRiAorHBVW3KbfVPq+2tyWw2Sny9Cf9CCcVBY8eWk3A
aa55g5KyjmcXFrSVwO3Hh8YLniCc9T7641I2gQfmrc9OU2aWNFSN+RCIjJ0b
rKV87oG/IZ1D4MAmseY+5VSftJOXQggYc9McLPUIr3UZ6bDlEfj7uM8pJWV9
2wb50wgCF4SFTmWUT0Yf/LSBT+Bx16JLNZQ/lCORv4CApaGgvp3yQytfk7Q4
6t8tp3CTAYSPXCys5SQQcOO7XLWhzPIf2m2TSCBJJ1u4hvKFrAO/1MkJ3Cl6
UsamHMn4I0CRTAB5LejfRdnmJm3abz+BnZx0ehTle1xe6ZJUAvb6IB8Z5cw3
F/DIQarPkEszKf8HprwmQg==
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJwVzXs01GkYB3CpJSJm3lC7mO6sahd1mtYyz5sR45ZKrdnsDoMZzQzGmJfS
WOSyZaQLO8Iqao+VNpfSbWZqkdZRJnRSlsa1lSjnlJ2oLe3+9o/nfM/nnO/3
PCuipLsExkZGRsHU/Z9Mn5kphYXey0iWKzrjeJZlxdSWXteoWSegp58dlQEr
w1szMzR3WWxdsL43/Disj/cj0Zo+llXSLaYkpALcUswS9mgmWJVj5rrezfXQ
eHBSvF3zjuXTsWXazqQJDB/2TgRozMDytw5JT1Un2LCKnP01yyCuwch8dmIA
1POeHuN0uYD2WnxHc8kU7HVOs5dMbgTuO1n6qxkD3FMfGM0I8gDTnx7wcmX/
QNSxcYGyHEPW/t19rt3/wrRG5lvfywaudtthWGeM/brPb1nC9YOXnTqTav4C
rOrnrlreHgCZgTfO9+0xwTND46kmc8Eg5HOWS96bYstxmqxYuwOCB1VXtpaY
4ZpwxhPb8F0wY6yvsDaY45YAUYt4OhR+zJMI131ugT3r8hp4F/eARXGbux/X
EuPjpY+aOGEQMbL0RWPYYlz9V8b8FtNvYbTJq+rsTiusvHKuVvX7XgheUPbW
3c4az867WtAb9h1Irz5940mscVvr6RQ14kHytvo5QZc1ZsxPUS28HAHPf42o
2GRPw/HhhYMKdSQ4JG7EQbE0nDd92HVAxYfQ/IaishoaFnOSHZKjo0DuuWpA
MULDaX/eX/y9dzS05Mg4rkvpONTJ8WcFPQYeuiWv8fWl432NR8eyB2Ngp51H
81dSOq5LFW7SawXgO5FTzDtFx+qPTEeJUgivC3vZ7mo6fnOLWASIYyF33/AW
/346lmq6btB990Fq/oR71iy1T15pREcioDmMDayyRthRMhzIfy0C28++1rKd
EQ5lFLuPN4uBo5UHnPJEuM1a3PvNUQl4DpLx6u0Iiz1rMm1FceCdzZyNiET4
4drhOxbMeLi8MDtyuxTh+MAsy1DbBHhbwRK/+AFh3Rf2r7ueJcCQofK6hxJh
UUhP4eZGKdzwnip1USFs/0hRnsJJhA5mk3i0AuFnfDOvqfpEkKZHhUyeR/hu
vm5o0XIZ7BhV2jRdQjiw5wyfcUwGuZVDonw1wl9+eOnaaZDBlLB7zqEZ4fUt
icZrYpLAMW5YXNCGcL4gcYWdLgkaVOWx7zoQznPOYHx0k4PQIGi/141w5ZFW
RkGlHJLqclbnPEJ4WXt2/HVTAnctSpgZfQh3xnQvyTEjoOnb6HiCcs48h5s7
FhFgvY+eq6T8yuOa+eRiAorHBVW3KbfVPq+2tyWw2Sny9Cf9CCcVBY8eWk3A
aa55g5KyjmcXFrSVwO3Hh8YLniCc9T7641I2gQfmrc9OU2aWNFSN+RCIjJ0b
rKV87oG/IZ1D4MAmseY+5VSftJOXQggYc9McLPUIr3UZ6bDlEfj7uM8pJWV9
2wb50wgCF4SFTmWUT0Yf/LSBT+Bx16JLNZQ/lCORv4CApaGgvp3yQytfk7Q4
6t8tp3CTAYSPXCys5SQQcOO7XLWhzPIf2m2TSCBJJ1u4hvKFrAO/1MkJ3Cl6
UsamHMn4I0CRTAB5LejfRdnmJm3abz+BnZx0ehTle1xe6ZJUAvb6IB8Z5cw3
F/DIQarPkEszKf8HprwmQg==
                "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>], 
        ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
       False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJwVzXs01GkYB3CpJSJm3lC7mO6sahd1mtYyz5sR45ZKrdnsDoMZzQzGmJfS
WOSyZaQLO8Iqao+VNpfSbWZqkdZRJnRSlsa1lSjnlJ2oLe3+9o/nfM/nnO/3
PCuipLsExkZGRsHU/Z9Mn5kphYXey0iWKzrjeJZlxdSWXteoWSegp58dlQEr
w1szMzR3WWxdsL43/Disj/cj0Zo+llXSLaYkpALcUswS9mgmWJVj5rrezfXQ
eHBSvF3zjuXTsWXazqQJDB/2TgRozMDytw5JT1Un2LCKnP01yyCuwch8dmIA
1POeHuN0uYD2WnxHc8kU7HVOs5dMbgTuO1n6qxkD3FMfGM0I8gDTnx7wcmX/
QNSxcYGyHEPW/t19rt3/wrRG5lvfywaudtthWGeM/brPb1nC9YOXnTqTav4C
rOrnrlreHgCZgTfO9+0xwTND46kmc8Eg5HOWS96bYstxmqxYuwOCB1VXtpaY
4ZpwxhPb8F0wY6yvsDaY45YAUYt4OhR+zJMI131ugT3r8hp4F/eARXGbux/X
EuPjpY+aOGEQMbL0RWPYYlz9V8b8FtNvYbTJq+rsTiusvHKuVvX7XgheUPbW
3c4az867WtAb9h1Irz5940mscVvr6RQ14kHytvo5QZc1ZsxPUS28HAHPf42o
2GRPw/HhhYMKdSQ4JG7EQbE0nDd92HVAxYfQ/IaishoaFnOSHZKjo0DuuWpA
MULDaX/eX/y9dzS05Mg4rkvpONTJ8WcFPQYeuiWv8fWl432NR8eyB2Ngp51H
81dSOq5LFW7SawXgO5FTzDtFx+qPTEeJUgivC3vZ7mo6fnOLWASIYyF33/AW
/346lmq6btB990Fq/oR71iy1T15pREcioDmMDayyRthRMhzIfy0C28++1rKd
EQ5lFLuPN4uBo5UHnPJEuM1a3PvNUQl4DpLx6u0Iiz1rMm1FceCdzZyNiET4
4drhOxbMeLi8MDtyuxTh+MAsy1DbBHhbwRK/+AFh3Rf2r7ueJcCQofK6hxJh
UUhP4eZGKdzwnip1USFs/0hRnsJJhA5mk3i0AuFnfDOvqfpEkKZHhUyeR/hu
vm5o0XIZ7BhV2jRdQjiw5wyfcUwGuZVDonw1wl9+eOnaaZDBlLB7zqEZ4fUt
icZrYpLAMW5YXNCGcL4gcYWdLgkaVOWx7zoQznPOYHx0k4PQIGi/141w5ZFW
RkGlHJLqclbnPEJ4WXt2/HVTAnctSpgZfQh3xnQvyTEjoOnb6HiCcs48h5s7
FhFgvY+eq6T8yuOa+eRiAorHBVW3KbfVPq+2tyWw2Sny9Cf9CCcVBY8eWk3A
aa55g5KyjmcXFrSVwO3Hh8YLniCc9T7641I2gQfmrc9OU2aWNFSN+RCIjJ0b
rKV87oG/IZ1D4MAmseY+5VSftJOXQggYc9McLPUIr3UZ6bDlEfj7uM8pJWV9
2wb50wgCF4SFTmWUT0Yf/LSBT+Bx16JLNZQ/lCORv4CApaGgvp3yQytfk7Q4
6t8tp3CTAYSPXCys5SQQcOO7XLWhzPIf2m2TSCBJJ1u4hvKFrAO/1MkJ3Cl6
UsamHMn4I0CRTAB5LejfRdnmJm3abz+BnZx0ehTle1xe6ZJUAvb6IB8Z5cw3
F/DIQarPkEszKf8HprwmQg==
            "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
       TagBox["\"t(s)\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Vc(V)\"", HoldForm], TraditionalForm]}, AxesOrigin -> {0, 0},
     DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, DisplayFunction -> 
    Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotInteractivity :> True, 
    PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Vc(t)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 
                 TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9670927334089527`*^9, {3.967092777609292*^9, 3.967092798553611*^9}, 
   3.967092982906464*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"7d21cfb6-c349-47a6-83ff-6adcdc6c6a50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spring Mass Damper example", "Subsubsection",
 CellChangeTimes->{{3.967093253947006*^9, 
  3.967093258363172*^9}},ExpressionUUID->"b919bb97-efc6-4f21-ba5a-\
31a6db2a33a4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"k", " ", "=", " ", "2"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "t_", "]"}], " ", "=", " ", 
   RowBox[{"1", 
    RowBox[{"UnitStep", "[", "t", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"m", " ", 
      RowBox[{
       RowBox[{"x", "''"}], "[", "t", "]"}]}], " ", "+", " ", 
     RowBox[{"c", " ", 
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}]}], " ", "+", " ", 
     RowBox[{"k", " ", 
      RowBox[{"x", "[", "t", "]"}]}]}], " ", "==", " ", 
    RowBox[{"F", "[", "t", "]"}]}]}], ";"}], "\n", 
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eq", ",", " ", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], " ", "==", " ", "0"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "0", "]"}], " ", "==", " ", "0"}]}], "}"}], ",",
     " ", "x", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "20"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], " ", "/.", "sol"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "20"}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<t(s)\>\"", ",", " ", "\"\<x(t)\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", "\"\<x(t)\>\"", "}"}]}], ",", " ", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], "Code",
 CellChangeTimes->{{3.967093265731173*^9, 3.96709337154683*^9}, {
  3.9670934440742817`*^9, 3.967093451360684*^9}, {3.9670934955928583`*^9, 
  3.967093598953998*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"86603c62-34b0-4a4c-8774-865accbb36d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["InterpolatingFunction",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.3044625602662323`, 0.4419648939083294}, {
                    1.3330931498728564`, 0.45393126049372634`}, {
                    1.6184768690633553`, 0.5459481067737344}}], 
                    LineBox[CompressedData["
1:eJwVzn1Qy3EcB/DfaNEqWUpGTZvFZnrYlnBHn08p5aJTupgQopK6yLCidnGr
n8d5OI91mocK0ZNwPbijxMnluc7D1e+3zXOSxpGmy9cfn/vc6953n89btC4z
dsMIiqKUZP7vyLuwin/ZETXUkCxVa4K9T6Ep7r4zrnRL9/i6gYUEXm1Zge9Y
7N9+VJ3X0g3Bt4KcB47xsbBG/1O6uQu0BkNQhtkV6/PrG/bYd4HO+ib39yI3
lPP9IqMXdwH3l7qMrXbHvET7haUO3WCWXDvS/nc8Hu9/y4mzdMOBbuuZJ+sn
oEXo/ux1MwMHW5xSOuoE2LtL29OgIP9Vgpjv3pOwIuw2fxbpUz5f7ZlW4Ik7
L97Onq1hIUqXceXjCy9MH9re9D6VhaZwTXzOvMl4/dD32qQoFpqLytfREd5o
cBo/4pCMhffvKnkje70xZ+ot+VweC5lbq0Joowjx04B4JstAqcfEFS6RYjz4
vFHh38JACCePc25IjJw+eaegngHPxp0Cc9UUfJ0uqdDeYeD8PourT7wE9fow
4D5jwFASVpTF80GraZYr9yMD0jYXbnOtD+rkQrvVgwxQrRrmzrKpyPSuWb/X
joVg7ovINt405CdVP491YEGaUHSso2Ya7nYvdXxM+ml/rczoSZbiNR11oo3k
mnJaOnKsDBPCapLDR7FQJY2Oa7shQ2FKOV9J7sX0ObkUb5yOKCiwURwWSh7N
rMjkyzH17hZp4hADS3uXdS5+IEfT2peT1aRPBDMu6232DJRojp9O+cPAhw9z
+tK8fXGrV/F1G3GPSm2z6/DF/e8o+qyNgeIT5k/GXD8cDL0ooMm9Aw+5EV/F
/liTHHg4dpgBc4g4MLTTHyujnc1pFAvWlDhOe3AAWiqW578iLotxC8g7HYBC
P1kCh/TLmSLyKLQG4D1aWPqZ5BLK8u1wuAIfGU2iKuJ8nWiMsUSBPra64kTi
Ogd3YfUPBfZfNdycQHwmSL+tNVqJskLr3wbyvyQqVK+8pERnx8bAHcQ5m+r0
RpsSs7Yxo5OIR/tdaB8Xr0J6xambWcTptgX29BUVNn9Z1HCSWOm2ZHB4WIWC
StrUSvwPcUtvTw==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}}, {
                DisplayFunction -> Identity, PlotInteractivity :> True, 
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                  AxesOrigin -> {0, 0.4419648939083304}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, PlotInteractivity :> True, 
                 DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, 
                 DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, PlotInteractivity :> True, DisplayFunction -> Identity, 
                 PlotInteractivity :> True, 
                 DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, 
                 AspectRatio -> 1, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0.4419648939083294}, DisplayFunction :> 
                 Identity, Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 20.}, {0.4419648939083294, 
                  0.5459481067737344}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[1]], 
                    
                    LineBox[{{1.3044625602662323`, 0.4419648939083294}, {
                    1.3330931498728564`, 0.45393126049372634`}, {
                    1.6184768690633553`, 0.5459481067737344}}], 
                    LineBox[CompressedData["
1:eJwVzn1Qy3EcB/DfaNEqWUpGTZvFZnrYlnBHn08p5aJTupgQopK6yLCidnGr
n8d5OI91mocK0ZNwPbijxMnluc7D1e+3zXOSxpGmy9cfn/vc6953n89btC4z
dsMIiqKUZP7vyLuwin/ZETXUkCxVa4K9T6Ep7r4zrnRL9/i6gYUEXm1Zge9Y
7N9+VJ3X0g3Bt4KcB47xsbBG/1O6uQu0BkNQhtkV6/PrG/bYd4HO+ib39yI3
lPP9IqMXdwH3l7qMrXbHvET7haUO3WCWXDvS/nc8Hu9/y4mzdMOBbuuZJ+sn
oEXo/ux1MwMHW5xSOuoE2LtL29OgIP9Vgpjv3pOwIuw2fxbpUz5f7ZlW4Ik7
L97Onq1hIUqXceXjCy9MH9re9D6VhaZwTXzOvMl4/dD32qQoFpqLytfREd5o
cBo/4pCMhffvKnkje70xZ+ot+VweC5lbq0Joowjx04B4JstAqcfEFS6RYjz4
vFHh38JACCePc25IjJw+eaegngHPxp0Cc9UUfJ0uqdDeYeD8PourT7wE9fow
4D5jwFASVpTF80GraZYr9yMD0jYXbnOtD+rkQrvVgwxQrRrmzrKpyPSuWb/X
joVg7ovINt405CdVP491YEGaUHSso2Ya7nYvdXxM+ml/rczoSZbiNR11oo3k
mnJaOnKsDBPCapLDR7FQJY2Oa7shQ2FKOV9J7sX0ObkUb5yOKCiwURwWSh7N
rMjkyzH17hZp4hADS3uXdS5+IEfT2peT1aRPBDMu6232DJRojp9O+cPAhw9z
+tK8fXGrV/F1G3GPSm2z6/DF/e8o+qyNgeIT5k/GXD8cDL0ooMm9Aw+5EV/F
/liTHHg4dpgBc4g4MLTTHyujnc1pFAvWlDhOe3AAWiqW578iLotxC8g7HYBC
P1kCh/TLmSLyKLQG4D1aWPqZ5BLK8u1wuAIfGU2iKuJ8nWiMsUSBPra64kTi
Ogd3YfUPBfZfNdycQHwmSL+tNVqJskLr3wbyvyQqVK+8pERnx8bAHcQ5m+r0
RpsSs7Yxo5OIR/tdaB8Xr0J6xambWcTptgX29BUVNn9Z1HCSWOm2ZHB4WIWC
StrUSvwPcUtvTw==
                    "]]}, 
                    Annotation[#, "Charting`Private`Tag#1"]& ]}}, {}}}, {
                DisplayFunction -> Identity, PlotInteractivity :> True, 
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                  AxesOrigin -> {0, 0.4419648939083304}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, PlotInteractivity :> True, 
                 DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, 
                 DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, PlotInteractivity :> True, DisplayFunction -> Identity, 
                 PlotInteractivity :> True, 
                 DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, 
                 AspectRatio -> 1, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, 
                 AxesOrigin -> {0, 0.4419648939083294}, DisplayFunction :> 
                 Identity, Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{0., 20.}, {0.4419648939083294, 
                  0.5459481067737344}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     InterpolatingFunction[{{0., 20.}}, {
      5, 7, 2, {161}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
       False}, CompressedData["
1:eJxFlPk7FHgAh8c12NzHuDWDMY7BzNDGpL6fjVa2FCn3Rm2odZajUKlkNSGt
FSlRUW20kkiOWNdT61ZCyRUpx3a4Y6vd5+mHfZ/nfd7/4GXsDtnmK0yhUIT+
8wrlf0YTGOTFkg75Wh7hyRi49FWHkJK5VakmKUeJwXRBVWTOL+TO8u1d4Yrp
hPXlZHF6wGUSSeFZhLVeIw1Cg6VbzQoI50SW18mPxSQ2zn7Ax/M+aTs57732
wQMiU9/5PimllpTa/M6NQQN52dublC7WTMTLRGfdXnWQbKFLV8bsuojF5lVb
w/N7SFN66z9C0n1k17BvfkrIAHFqke6W7x8m0zfedHueGCW/xdX3XGO9Jhbe
2b3vWsZJFz/qmdWBKRJB2/48TuUdWRGV8bffwHvyMFfEQS9wmsS1hdwa/jhD
yMe+FTkJc2RZd2OAl/ICKdtS0qSWu0gORNGNejhLxDQvSZBWvUw6Q94qWn7/
iYSvcczua/1MEkXc02qMKPAaF7j/+pYC0/YK7Z+KhfClZHLEIlIYHRc0b1L5
IhAzqrE6NCMCfvmupvFbogjeKOrp6SeG3J7rky0rqej1sz+87hkVUvOTUkWp
4vgu/swlxmYJ8IKZrDYnSei5VhVFu34DGpz5rB9XQMJwov7JbiksyR93OLZX
GpNLKj3sYBn0jxT6PAuThf+YzlydtRxe9Ivycprk4PR0LDjGTR6NLY8KXMfk
wW/If2MeroDCyiSmnLAidO8G755KUcT5fMecR1pKkLrKe5FXoITm4lN/FEkp
Q1A/cLQqSBkbuywcH7Upg/rqNKPLjIbGuaHpwbM0xFFXN0x+oGG9SvK5hW0q
oBiM+ImUqKDa0spSVlkVR+xTJDUiVcGSrbjRQFFDZ9fohuBENcRckB1VoamD
6cM/UXtZHe1MX3qAsQaiJlOqle5pQPdOhVc1NNEa+WrJv1kTB63lMuVdtMAQ
XrO6ckgLzQ99n+4J0EZE8tkwmXltaDtXyt8/thJdLFaGE40O9euhTLtAOrz1
Ku5a19GRd1VkPU+VgQm6QwcrmAGznPSdWg0MhGsNTSmo66D8omGMRKgOPquF
SX5u1IHt+aqMGQ1dCGhU/fH9uihiHMktr9FFL3uWflpaD19WB2R7eOpB3+al
hvFNPThscc9cntdDuHsHrcWWiaw9dmlZqUw8T+Bt8G1mQrVAa95EVB8ubRI3
5q31kfZhxrUmQh+PlQYlThXqQ86yqdzxtT72lUdm9lqxUMfXjfJJYkGjqt3t
zQALYWsPW4ZyDdBSbaC6GGcAJp4uxHYb4Gjt8R5xQ0O0LEbPFQoMocEJV3SZ
MMQ+/yDupx+McD/bb2tegRGo3d5Bm6SMsUPaPXE60Bi5tttuZrYa413ZoWFJ
STb4xjlq0bZsxGc3Ok3EstEpPyXwqGRDM16hrmmeDf9FyyU+zwQ9QcNsoRgT
2I0IvB/Wm6DMjZeaLGUKVtvzBucdpsiwiVtQyzZFu0Hlt5NUM4jLzERUhZiB
zBiVJveawTqQG32bzkHvzlY11R0chDvtKz8m4OCW8TkP57scjIjVLjP7OdAY
mspapHLhXKG6rpnDRWKa7eAlDy6mAjw1x5O5cLA54G5Ry0WhuiA9dpYL2emc
J00sHvb/dU+O5skDjx1t/mc6D7Nn1rr8/JiH0g+UKCUZcxzc3nCx2t4clmUJ
1XvjzbGktmlYodYcn5KuhQqGzPH1fhb4F8WCLwY=
      "], {Developer`PackedArrayForm, CompressedData["
1:eJwt0QFHHgAABNCvUpam2SxNWZbSLEtpNqVpNptNadpK05RSSlOWpWw2S9k0
pSmbzbJsyqbZlM1mWZayWcqyWTabpTQbMcaIEbHerOP9gLuLr6g/fjooEAj0
B/4nhDDCWc8GNhHFFmKJI55EtpNMCmnsYg+Z7GUfBzjEEXI5yjEKOcFJSimn
kmpOUUc9DTRxjgs008plrtDBVbq5zk166OXuWrf7POARQzzhGcOMMMo4r5lg
imneM8MnvjDLPN/4wSI/+cVvlvjDMiv8JdjAoawjgkg2sploYtjKNhJIYgc7
SSWd3WSQRTb7OchhcsgjnwKKKKaEMiqoooZa/h1+hkbOcp6LtHCJNtrppItr
3OAWt7lDH/cY4CGDPOYpz3nBS8Z4xRsmecs7PvCRz3xljgW+swo25091
       "], CompressedData["
1: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
       "]}, {Automatic}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.967093499636509*^9, {3.967093582233676*^9, 3.9670935995186768`*^9}},
 CellLabel->
  "Out[181]=",ExpressionUUID->"e82e8a1d-7349-446d-95e2-8351a485890c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0.24, 0.6, 0.8], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1: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
YP/NW3VlT1WE0Pbm06e+0JHK3bFb5lmKMOERLznHoKPI7Oqlj0WKcCp83kdk
iI62pfo2/q5VhMpUt8938Hx0UOwLQ6hBEdrPH7m82EtHfrfsFg2aFSHGo/af
LXbmjR3aoR2K4DywZafwJzpavCZxY82gImxOZ8Kdbjp6drneSeGvIux5mqYu
3EFHhbtbJWLnFUGk8eyfsHY6yuDr6vq1pAj2J551jeJ57UIS3aSSTQkMzdDX
5vd0ZJG2qHNQUAmMPhRszGuhI3SIdbRKRAn8DL43y2FTZdbmKYsrwctLcDIT
z3/id9aLT8oqQeTjes7sJjr6cp+yelVLCSxWXFReNdDRR+8NFVM6SnCvifOw
CXaT1rZTDlQlMN/54m7POzp6VLrnu9omJVixCXKZq6ej4BceHTUmSvBrITDC
to6Ojp/zu6K+Wwmc+r8rTtXSkdPmoJ3XLJXgTV7D+yTsnW8vvnC0UQKefU8M
e2roSKAxM2fORQmUXZr/O1VNR6xX8hyc3JWgXtthVh57ZnexyDsvJdhxYGd5
+1s66m9/EZt8QgnEPKcUqdj5n7pOaIcrQcILz1TBN3ieTuvXuHlBCV40l69v
e01HcYcYI4tRSvBhs+ilq9gnhn7ZNcUpgUlvg4YAttG3tXAsTQkGe13dNKvo
SLtw3WLzbfz+i0yd2Uo6UvARK6fkKIFuqupAHTbnb2X1lXtKcP/G/RY37PlS
zS9uRUqQebaCdyP2WKBeZutDJeAW1lLlx+78u00w/akSvGu40Ff1io7qXuxq
WX2uBMeP//NLxX5+zuKSxyslqBHg7T6FXbjZelvba/x9E3fOA9i3/znM69fg
/VGvYaNiJ751LsuoVwJbz7YmEewLFz19WZuUwM6PajtXgeuF8zSjvR3Hc/bK
izpsKfnm3qUPeH0fb3CUYLdvlO1Q/6gEOyVOfUzHjjwQ2GDbh697k9RjsQ19
372O/KwEEf8eLJ7GHouWfFY6pAReOXO7PbCzc/weDg4rgXzTspg99oGKmjzu
r/j5pUWOe7C5utffNvyhBJ+d8BCN/WrcO/nYTyXwf5dtYYjtz/XmStJvJShv
LpnSxlZSEL74elIJRI7McpOwP23yCB6bUYKcxL1Jithx1q9OiM8rwWJWUpQs
9jY/AU/jJSXYIhA/LIU9FePqFLiiBL0vBQslse/deW6bzaoMEYzRHsL2r3gs
WzmUgd+Y7i6NzdfjZDy/Rhk89J7Zy2FX/yrbrMqrDEfTyA+UsIPWrNE/IKAM
+bLsh9Wx1RUPa0YIKUO29rS7LvagUaniQ1FlsFlX3rwBO8mGXbJfXBkc5hai
tmMb+9sJckkrQ6HUmWQL7PnYB2v05ZThbPWnKWK/HuaurhxVVIZd0HiX2E/n
SuvZeBVliJ+fyCH2W/Tj/V8VJGV4fGT2ezR20+8l5jdNZXjHGx6cih22dt+g
iI4yoD7lvcXYzM3zLX4GynD9wc533dhptha1GRuUoVt64ugYtsWJOxWNRspQ
f0d+AxvOl/K7ZoWK2/H6oh2u/4ftVZWZY2WsDPL0i+v2Y8t8+pMSaqoMn475
VfthX+JOj/5oiffv5dPHxdgblX+Fse1XhuNmMj9bsMe3bA/StVEGvaJjVuPY
NgGjrlcOKUMyuhVNxfmv0rsJtnri/dXdG/Aeu+9PwgYfH2XQ2Bf74C92PM8X
nVQ/ZVg3GbEkj+tvZmuc7OQpZZhJi+04i12fP7CYf0EZlDLOsxjgej12MvQZ
X4YyqFrFmAziejekDj3TyFKGjtXWs6K4H/BMwXOTOzheKTFXLbEfB3K9uFCg
DAZtV/fVYi8HXH85U6YMWhtk+Z7j/pJy4n7lYKsyaFfLKdfj/tTs213z8J8y
fLv54q53I+7fZMPaZhYVSNvU6FKBHTCeVvuNXQXKJBbLuXH/FPN1qlPgUQHe
SiWBh9iux0frb4qpwHNhLbM53G+XvVcbw3RVICFEq/4e7te6nlrtFi4qYDTa
7HegC59H3vInHrmpQMHshPBL7HhfEUEBL3x/Nm8BOXw+jAYu7e/wVwGhG2z/
xrDzwlo/7g9TAbnJ7T6XP+J+nnycdjBVBQZUs6U68Hm0WvVg3LlNBepNHXTO
0emoQ5jMe3qTKrQ8XjZ9MU7Uj9/o7S2qEK8efVkcn5cljSWNtUgVAppOXzuL
nRimd0nQRBX4zl4bM/yN8+eb4b8HB1Th+kW/h2X4vG2p2D7x5bgqvGq6rpA1
RUfvnO2692WrwqG3t64b4PPboDLtydlcVch7+WchDjt//cC17HxV8EkMXmVg
X2pxtBgvVoWde3ppVxfoaIeB67vYF6pwuk6kdXAR1+MavxdvOlXh/ahngg+e
FypLIm+T2dVAZTdnuzgrA3FZ2EqlcqnB76/9f7dh7x8lpbPyqMH+0MZud+zv
ym0pnwTVoFTpyOMybJF08eQLcmowdnHdFzM2Bjoe9fByzyY13I+9Bz3YGei5
QsQatFUN1rTNbr6Czfpmf0wRqEGDXoDFA+zU+dmo86ZqcHRWI+I3dp3f9gh1
WzVYuLVXNZCDgaTtP50OC1CDLzFZZp6ceL76Wzjz7ZQaPC9bzrqE/SQ59NT+
s/h67MHcXGzTNoVAtfNqcMYx+skA9qkdx307r6pBTL/0XzMuBmolsxxTua8G
O3iiF9evwb/XW7qGE4vVINP3gJoOtovnPeeFR2pQM7VpdRf2XO5up/ZyNVBf
dH4ZhK0sfsshuFYNOHurzdqxQ1k1972nqcG2NVm/AvG89s2Yt09tWA2SrHnS
LmHvuzx+9CJTDR7fi51OwVZZV3rC8Kca3H6q9uYV9nsZg2t35tWg3zr43gq2
ofN68aUlNSgIH/oswI3n0bzZbNtVNXB2d6+Xwz6tWVHCw0WCSrvQh1ux5TZu
aw8SIQGHax7tLPblUPmDHWIkmNnFKIrGnnrDMqQhRQIh1VKNG9iNu+p+DSmQ
oPnCR+NH2AHWZvzmOiRQNLWaoGEPpGjcytMjwYeN0k6j2MYDPLIrBiR4fw9F
zmBLurSRn24mgcFs7E9uHjy/+h+wkDXH35/ZZq6HTS7T7zlrQQJVzi/eRtgp
f0Udu/aSgE9xevtO7ONhvcdjD5LA/+55SRvsT29fTg87kCBtMU7SERvYM0K3
HCHBxz0aXcewReMcr04eI0HGld3+J7HPt20VsfAkQYy954Fz2D8E5W8X+JBA
4bf5nwjs16nDxYcDScD1NudQPLb651rq8yAS5Dk8IyVjJ8vlvxIMJoF75MfS
VGyPex4t787jz8fHTOVid/4wPaAQSYIjn2ofFWAbkTUGQqJJcDvOWfUBdv4J
HtePl0nw1/qlQyn2uqc/R3XjSTAvqrLnKXbI7PvAuGskKG9ZWXiOzdxUssBM
JsGvb3ker7Ctwq9dRCkk8PY6cf019svqAO6MdBLULr0OqcZW4jhwfSaTBCrL
40p12PGm+pJ77+D4Bh2Ke4c9GyeaW5RHgs+y7k8asV3a/6pz3CcB3c03rRn7
vVDvY6diElS7d6JWbEPblxsrHpHg8MTk/ffYd9LSq0WekCAkivqhDZtnMMTM
v5wEcXYzle3E588W8V97QYKRO7+cOoj7C/d1lb7C++Wg+55w/COutM7XJKj4
zMPRSby/2X9HJqtJkM3XxUWYOXJMSbieBMcP9/YQn18Xkfyd2kiC5Fo/f8JG
UjUPrVtIoNz0o5t4nsezicCgNhLsP5/JSTh5n9yGW50kmI6isRPv9/qnxfKz
bhKs5WTtINbzIya05tMnEhhVOnq2EPmhVBwz108C598mbU3Y6HXfHgkaCdhP
i7ES++Njv0ZoE4MElHIldmL/Uqb/++QwQgLti3Xdtdg1iW63Q77h9f3dd4rY
/3GNG863R0ngcUb5CxEfiXc1qlXjJOB/cUOhEtt/Se7xvykS3K1/wv8MOyPF
8rTcLAm+Bgu/foL9Ti/MCC2QYFflma0l2DJe/fUXVknwhOtpGZFPZuxr43LZ
1CH1CBTexT6Vbbi3llMdlIc2B2Rjt/Tc6GfnU4e9238G3+Ihfh9b/Y6RUIfQ
i1vPXiTybzDs6X1pdbBf3cMTht1x9kFwk5w6xJAfnjyDrVaylp1HVR1goa/e
B7tbqk48QU8dIrM2ntuPvfJscvCRgTo0Pler2Y2tuV/hbvsGdUi/7jhM1OeF
2HCy4DZ18FGUe/gfts7Mhu03dquDl9/p0+LYh655cJVbqkOcr2zcOuxozVut
PfvUwcaGP2QN9qDzlK2YnTo8/2Xyaxb3i7i2hz7px9Rh+8NyrR7srwWKN3PC
1GEl1fbIZezxS8ML7BfU4ad22Llwol+55h71ilKHkLqcwJPYLPKKWnpx6kA5
0TF3GFsqVaG2NlUd+s28vLWx98XK//lapg6dqd2WLbh/VnnKWpBH1eGEYOaZ
Cdyf63bRniSNq4NlJTvrMHaLcpb43wl1cBsrOdOF3UuXGXk9i/dXtEj1GfaU
nUzIXg4NkJjnzjmHrW4mXXhSXgM0fTe5r+Lz46a6JEeFrQZsGDpoz4rt6KR2
f8ReA7Y6LW2ZwueNyk393QKOGjDS8lZ6BLt81TLpmKsGnN201FSP3fMpUkbg
hAZQF71+xmKLRI8bHLusAVlINY0fO3n4rTt/pQbE8i1WSODz75B429qNbzTg
S0XMeW5sJcuBB641GrC56o/JIj4vy17OTL5o1IBEpSDmZ+yuaxrnXXs0wO7I
W4ccbKFtN1Je/NKAlOTvniTspAyPRhcFTdBV3NeyFZ/XZ89EngpT1oTKpfsd
uthOB7LlU9U0wSZKgaGITeb5dPY9WRO4Nxkpc2E3n9ulvmGTJgiedNnQgc9/
NgeVK3wHNMGp2aL6GPZp8S+7X0RpAuPX8YhUFrw/0/9mP8RogsUHMrqKbdwh
mTd+RRMubDRZF4EtHLt/STFJE8pOrxn2wC6ZrX4Qn6kJF4+aWW3A/vExh8/1
mSaU5uzteb5KR4duHmnn+64Jv8Wc37qu4Hn6KY/08TFN+HjziqAlNv3DC8/m
X5rw59qzaxuw3dYJs8bMaII0uUGCH9s/rkF/lVUL3vPaHnqF55/IC7rpkzJa
sFV74pUstnHO4Ne9ClpwQFV9hQd7zZsr1BJlLXiyHBc4v4znx6WRVh9NLWA7
rD3ajZ1yJm1lZIMWGHzdJpeAXeTL6vbpgBYIameWrMX2vVry2OCgFmwzNPw3
v0RHOsWH/yU7aMEGrj9ho9hl35+l7HXWgviCT+tasatcfZqb/PD91cqjkrDP
XxQXIwVqwcf/0g9HYm+/U+8aHaQFv9A9tyDsBprc8vZQLch9qMDjgN1p361T
eVkL/mjM5apgJ5+9ECoZrwUHI33ZJLBtU7Sbzl7TAt6Fthu82APdsS4GKVoQ
vEHNfBrPh0yrLTcf5WmBm9+j5XrseeN7CzlvtODi+emzgdhhlTlR9TVa4ClY
FumFzULN4B+t1wKrBLYXR7HXyF9TpLZqgczf1dtW2GILweb1vVowLNNto4Od
ceJU948BLSjqTCxSw5b95neEf0gLdM5JkuSxVbpdAw8ytaDEWjdTEFv/kUX6
jz9a4Ppm1/G/eJ59rmyqzD+jBQ+a3NknsI0ytj/Sm9MC6Qrfuh/EvBtrWBPy
Twsi/5W+GsRu+EfZk8NChkryg8lP2OZBWh/r2Mmwf55n3wfsfS4Ko3w8ZNgX
dyKyAbunV+qUHj8Z/h3XOViDbW+1/p+tIBkmNzXsq8I+uplHKEeMDDdgoqIM
23/9zEY9ZTJoHxS2z8Weuvq71laNDKkusU5Z2KfZRi1CNMigLlAQl44dNkFz
rtMlg0o4sk7GZvHoG/tOJYNJgddEIvalwa4gPkMy+G5Le0zM71ebGy/bbiGD
u7lrbjS2ANQKhyAyvDpwvzMSO/l5VWb2DjJcmTdVuYAtpv1CrW4XGYTtJDLD
sTPynjz+bkYGW/nxDaHYclIPjfgsyFCTlzIXjJ2bVFBP2UuGZx1jA2ewC8Nv
952zJcPF1n7eU9jkmVuu2fZkCD8t4RCI/dgnabz2MBnKw82aT2AbDMed+e5E
BsUBI0d/7Bd20Sx8rmSQUKgW8iPi0x4RR3Enw5nowtHj2G+MQ0RtvcjQO1w3
4kPEqzIo+9xxMjSXDq96E/HSO6Ge7U8GdoEPWwnvLvQuqw0kQ0q1c5YXdpuc
25bvQWRQoh6VI7zvllMDbzAZBE5nVHsS8eN12EcJJcNLY0YUYftI6wGb82Qo
5lrxJDw4b+l27iIZDrdW+xJ2PmH2O+sSGfJM/l4nPPJ1R3BtLBm+93r2Et6R
035X8yoZXkcxTIjn3bE/1JacSIbPr19/Jrwq9G1u8ToZNj6sukW8r1NroNKx
W2Q4LpYRRKzv9aV/Fq1pZLDyEA4m1i+z7cpZ/UwyPCkczvHFDp0TvXs7hwxz
CXU/if0aeHznPXseGZp8Th0m9neTD3nueAEZKjY+/B2Anab8UrGniAwTKer3
TmLPDe602PKIDF0td88HYR9M6TiT/5gMD6p7Qoh4Ptt7OJevnAx2fMHpRLxF
ub+3Br0gw+joroEQ7K7QFYVdb3B9pBrXRGDr/Re351ENGTbrf/Mg8ivp9/oz
69+R4ZDgTW0i/6xctFu/tuJ8C5yWIfLzkVTFX8sOMsT3i+wi8pevx1jheRcZ
nu6RS7iO3WLieDqmnwxij9+HpmFrsPzI+T2I87OZppiJfbniVMtBBt4fo6ff
crBNyFflSd/JMCUZ1Xofu1boVXPjDBkMnyUvvMRWbN01oztPhoDZvITX2Bcu
fZBLWyJDDLvKtlrsbXM/TnmxaYOVxI7pVuxXg+Jy3ILacLn50T0Gdtn90yd3
a2nDFY/6HwK4vwi5sGaV6WhDm5W2wnrsAKmERimqNlz/uOOENLZOQr7Mz43a
YLJ3u7U6dvHJ7oarJtpQJqmvuRP77lY96TYXbYgqrOkMw6614olactMGxym7
oSjsL0dHxjS8tGHjD6/lOGzlyFuvYvzx++xm807Hzm9YcIBQbfj8bt+/59j3
9tamPb2J75+4hzaDXehiLZbRqA3f31/vOIf79aPo00Ke2jpwQ1L/8e1l4u9D
RyKjKTrw+r/S/vxlol6Np/P0deBmLZWzBLvYVfQjY5MOnFqf4FKNXYieph0y
0YGz+y01v2LnL/yRtzqqAw1WZd06+LzL8PPV+e+6DqjZDdrWYA+o2ORY39QB
2Wx+7xZsycHNgidTdWC/0Kfgbuy03bxTJVk68MflVsJX7Fuk4mfqxTrQbl0V
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
D0p8l4ffYf8f+wQ3uQ==
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      StyleBox[
       DynamicBox[
        (Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
             Annotation[{
               Directive[
                Opacity[1.], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]], 
               Line[CompressedData["
1:eJwl2nc8le/7AHC7zKzsvY5xcBw+Ko37qmQUGgglITtEqWSkCCUklZWRSKgo
aYjKyswIZeQ4R06DlIzs+N3P9/dXr/frOed5nvu+xn0drxRdTxxwZ2NhYXHh
YGEh/s0678ql53Z7GwtL0I7XUhu31ncrWNgpnEMjbbfqZMqnt602vIlSULiC
ls+FtxsViCCB5OePefqSUUOElPrmdWooqzpBnlMhHRlklmtwXtdH5Am3xFXP
HOTpKFI5dXEboglkryz33kU5y6XaW3/uQioF3IaLS/fQrTDDact3lsh362m/
OfkixDGwvv6mhzV62sPIn9n5EO2ZdGh1v2CPFo9bDE56lqKSzC4HMV0ndId1
8MrcrieorG0lr3OjKzJuu64621uGhqxNxS/kuaMfaaY1M97lKDyh8ud6O28U
7/bPcXrpGbodLrtWwNoPdS953fwjX4Emhi+/WyN0Cp1plKNMPHmFOjZsauUK
OY2kbvS0/tpZhaTIHQe1uIKRqyaw//R8ixSmhc59iglHbEshHTNh1ehISU6u
z9YLqIdhKzuzqwZJdFaOBzVdRMEPeSumemtR10Z3XkWhaLQ7+RvX1J06JB42
xXq+PQbJBNfYTHrXo0MpsnKOmZdR9c6zfyaW3qGA4UdcQt7xaM3nL6Rf8s2o
V2H04y6XZNRX/fr0+I9mlPSq/IjghRuouCCt7ueTFnRjJX/HtYKbyOqk1dGx
ne9RQ7yBxTGeVJTC/Srlu2cHWiZNdQdqZaLys7tPnpLoRKIT2g6/orNQ5tgG
yemwTvT1T2tG4vds5N8p7Dm16wOyqcpX/0e/g4Qzm9gme7uQIm9K4pvhPLQk
8LwoYEs30p16VJZSnI+YF/P2/bnTjUjDMYEVZ+6h557nsye8e5CA/qeTryTu
o0P6Bka/lz6i/EsZqw8ii1FuS07gT/l+1M6epq41/RjNpD3TpMf3Ix9ns/e2
IU+QiWfrSNdCPzpYYZEsyV6GxtnnbF91D6DLNWm2tpJP0catVkZXYgfR9gWb
G0t2z1Bn6TIbaYKOhoI3z/2VeIUiWsi79Y6OIE/Bk+UfoBaVlF757Kszhs6L
xxz3HWxDY8Jj8btdxpDSqc/nygzbEenM7m3qN8eQd+CfUpHr7ejOFt7ckYUx
tDyY/l7epAMlN8d7HHr3E7WbBZ2+ad+JzoxcmzR1/IVkMjmsHtZ/QDm8rVFC
u/6g/q7/6I0ZPWjb1lDHC05/UNqOPNmPjT1o0F/rv4mzf1C6BwrvnulBEl1X
v70v/oN6ItRP37H6iK6nWZhfFpxE98bpp9xZP6Eo1XaB1c+TiL1k964p117k
iT6kj5+cRpwx0W0KQgOI5e7sq89XpxFXj6aJmNEASuOQGWzJn0a9TsmCP1wH
UFOzh1zRp2m0bYf5MbnyAaRus3zX3WgGhQSx9jTYfEY/vEgPh1j/ouclf1KS
EweRT3L4m86kWVS5483desYQYvt7l/62CPvR+i4rDjrKsGtiKa2dRd4b6uML
SHTUIiOyM2FmFknrFVFf+9GR1v3CRnP7OZSp/i80fI6Oxiu7O2vl51Gja5vP
hQsM5P9VY6S8ZAFNUbmf8J4eRgyn/rU1zQtI2I8j48alYWTdd1mnjbmAxn8H
lM3fGEYbW7+f+yq1iLhZTqw4lA0j9if3BMViF5GFvp7ImV/DKC1McdvZo0so
zEGufdXxC+KZ7TwWFbKETiUoa+z1+YLCT1y4cu3WEjIljdiEnP2CXF3pPfdb
8eerrb8fu/4Fkc2yjvdtWEY80Sn3I+u+oBoRyfRNgv/Qn6HAiW8KI8ggoenN
Lq1/iLwhtvS31ggq4Apm7jf5h2TTy5s+GI6g+IVPuj5h/1DtkD6XpsUIOki/
2ZDx4x8q/zLer3R6BDXZG48XsK+gzHblK5wRI2hz17TQU7kVFJg3da/u8ghS
eHfgSKvNCvI0j9vedXsEjRULzixVr6Btk6qDm6pHkKNKteTawRV0zIfUPt80
gjqyTiDRuRX0a5Y/6MaHEVSe1B5H1l5FJ81+8Dl+GUERZ+IVj6Svopk/ljOb
2ZiIR/ESib6RBSzXT/8x3sxETVuu657fxQKxNn8O2G9nohj77A2yB1hApSZ3
raUpE7ElvTQ9fJwFNCIcXw0cYKLFlXHP3iwWaMmRc77ixUQvpRZPnClmAVaT
vdFFfkx0xnBN8PoXLMC7s+nOg5NMNOWneNm6kwXOByeIHgxjop+DtoUdbKzg
o73+vEkiExXPuz72X8cKrus4h4OTmchLNOAlvwwryPheX0hIYSLmnrimPf+x
wgY+lafO2Ux01zO1c2w7K7zx+ndZ7i4TOUfl912xYgWL5+Ln395josFXb340
erLCzi4+gwcPmSjjU+sfjyBWOFI0RJ4tZSL7qb55zous0N1AK1d5ykQ9GtNr
jTNYYXJj1DdyBRO9TyNpVL9nBfJ7KeFfdUwUV26gd7SfFe6q7K2za2Ais87t
m1a+4uu9vn8Lmpiofo2j+ZZVVjj8ZvDw9HsmilT23v+Zlw2On3/T+aediQCd
cQiRYAPZnwWm3Z1MVHUmyfulHhucSt9UbdrDRCHJWYF229jg3jZOzoGPTLSx
pPjc7G42MLkh0bW/l4lmm19cvGXHBqGtLealfUxU/rX+ioEbG5T8rE6c6mei
k6xd17sD2MD/23id9GcmosjS00+Gs0HXk3g+rUEm+r1xPFcojg1I29TjFWhM
9MhmoehxChuEmCV6LGP7BnCV7c1jg7uc3W/fDDGRZrzIq9+lbNCD9lZ50pno
x32F2oQqNuAKyrkwh11Qp91CbmYDq4m7ev4MJnKjG3W1fmSDneMhM63YSkum
Az5f2MDx8ZXfgsNMxBCz/cI9gT9fFLhrK3Y21XWscIkNAuJE5fdjO1qdmDJd
yw4SPsm5FthSPmGL30TZYXnIbFoXuy/6CluMIjskyXYZLeH7p+Sm8KjqsMPx
9Rw5Jdg2r/OE643YISNxwmQ3tnD/Y6ljpuzQUTXk0I7ft3PmtRKbDTsULu9f
NcJOFGzVzHVmh7ncFackvN6KDbLPrPzZYVpQ6chrvB9MpxNoOZQdvPat9+rA
+ycYU9NcdIUd4u10njbg/d38SMTGLpUdQtetOZk3wEQePe5DHPfYQW0itM8d
xyN56YVXWRk7mKYWSwngeP0wdwznb2eHY1tG2YVwfEUDS9ZUfmYHo0Y/Ud9u
JkJpLMleo+yg5J/c/egDXt+3/II6Dg6IlNPV/9bGRDX8c5RAYQ7w9vu5jdbK
ROMG5pVyChzwOqKlo7KZiXZG/eo4t5kD9A0KHCjvmMi/GB0imXNA2dOgtw21
OP8/XGf2HOSA46Q1l3ZVM9EfecMF3ZMccOsTH+e/VzgeVeeVvhVywPPwj38c
cH00j3Q+vPGcA84Kv7HdhOtnhkd5w/Z6DmhpfNjDVsREexwa92TSOWAk+huL
La6/+b/rTh8Q44RPgfybl28wkbKs6+qqMif0e8amUpOYyMq4/MojPU4w1j38
wSaeie4l22evteSEkPSw6iOXmOiAbm7jmyhO2HyrsCn2FM5PL6qU1iQnMLvN
4/2tcPyvXcrvW+EElqidUeHmTMTx4pNODB8XmCv9HQs1ZqJDnKE7h0lcsF9R
cMrUiInW3q3zTXXigh0SpqrKqkzk+tnmLft7Lgi/tPk/ifkRxHN72C+wnwtM
n9xKtZkaQWWH/GXo37gg97x40KXxEcQ+EHvuFesa+JcxGviWMYLy+17pB25Y
A3769vaFuN9++6hQOHR3DehYzhsFpYwgn87xpIpza4FvgN3JBZ8Hge8uuZ4g
8YCPwJ24gF1fkBzThGtWnweqGvXvpW/7glrZuIvDgAfqlClBtRu+IFVImLzi
wAPDDm+fi2h+Qf2vbl3Iv8oDY/uoZ14KfEHbHxdk90/wwNo19wJIfcNI6HbT
wM6XvNBE7c4O8h1GbyrizrfU84J0knPfB/dhdLzPQmn/B16Yfp+SRj06jN6t
/+DtNMYLinybJVb3D6NzSf3zwTJ8wJW39LdhwzAajh4TK7nAB0ZM8ZPqHMPo
SQCftYQ5PwzPnVPsu8NA7zNEzj06yA8HVw9r2WQw0Ld6qZwdbvxwYMdqfe8N
BpKS1PjpG8EPK56i3LMxDHSpZldUzTN+0M3L973ux0AHhSOe+igJwGH7q3vs
tjBQwJaY/lVdAbBbn73OzpCB4jwSVm9uFQC3h+vrjlIY6O2r23ve2guARMYl
43gVBlI/9nJE5JoADNJVnlnzM9Di00mR10sC0O03Wnawho5Eh+Y3HeBeB2df
DZReek5HOmtZnL+LrYPXbcF3Gx7Q0TFHgYdC1HVglDPaG5NCR+85tIw9vNbB
XSkXnyVfOsq2dQta93Ed7KMI2LTI0lFu6PExip0geK5yGly+NoQo1dzzsUcE
4ayGnsZo7BCq5ijkpB8ThKwcvugjF4YQI4GpkBAgCHu3zsZfCBxCcneO2I1e
EQQdaWbcY5shlFG/tz63ShCyo8Usq+SGkCb37w/ztYJQfTdI5qDEEKqwjKfv
bRaEOzsEbrALD6G+T02L/z4KgkMNW3A65xASG92ud2hCEPxTPko++UVDyfwG
2cJKQrB838oksYaGlA50PfBWF4Lv7+b+uVTR0JOUgIpqHSG49/zEJvMXNNQp
/6jHf7MQFCttUjvwiIYEqGq8rTZCwLmpnWyZQUPZZ+ollA4LwYkX7IerbtGQ
dqWr2jkXITgcPde37ToNWRjnbCf5C0FPweO88Ms0FHdQIjgqVghaRndHDJ+l
Ianbz6MHEoRgRe3BxrFTNFREt7mhd1MIlJ7enOcMoKEmr+sl9DtCsLDOz+WM
Fw1xhfJ83fxKCAbr1mduOkRDKW8Lp5KrhSBQqmtf/0EaUuUwZRlrEIJXQ9Kl
V61pyDghSjqtWwj6L5sbqFvSUGTO8v6ZcSG4pT3G3LadhvZRXgZqTQsB5bK6
3YVtNCRXc+q664IQML3lrLo309CrL2OdnZzCkHDrd9IjQxq6fKrgzxo+YYih
xb81MKChgxyugkhYGGgcvhvb9GhoSrV/7yM5YVBa6G/V06ah6uc3TzBVhCFT
a0/jP00aSjTdd01aSxg63OraB9RpSNO7sf3KBmG4XipY06hCQ64Pn1l67BOG
1WPtLsdlaYiyNdAv66AwOBW8+fVamoZW2sgJPY7CsPt9wYqCFA1lTOS93+Et
DMrpQ54S4jTkdeHo+LkTwvAj6Pfth+tpyFBImu/JaWGgLJ7l2y9KQ13U5D3y
kcIQcdfGvkWIhu7UWR4/eFkY1s185s8RpCF/G+6rCYnC4HDUpDxqHQ1t+Vpf
XH9TGELOGm4MFqAhnjMXWpYyhGHXBoWYMH4a6uPaMkbNFQa2EvO4JD4aKkid
4/a5LwzqD1sp5bw0tL3C37zvqTAIWzuJavLg/Nmt6b3ulTCcO12vHsZNQ4MD
Xy+bVAuDoK9uIm0tDRUfzy0MbxCG4HG6rhV28LJjU/l7vB/nfs23raEhkwSJ
Hz+7hMFO2LTHEVtUrmeNcj/en4GnDxe5aOhLyTXSIbowdLd0+97Hfoz2mF7/
KgyyRxRWXbHPd3J5Nv0UBo6Nvyy1sS1camNWJ4Xh5KDXTi5sqanwAsN5YdA7
kNX8i5OGfkRuavBbEYb7PQEtI9jPRf5+zecQgUMXCnR/YF/Kf8w5yCMCziz0
L4vYB/7zVRUREoGs+rQ2aXw/hQbSrt3iIqBrRenfjf374IjbRVkRYO1h/I7F
rvqefemlsgjo/6yf68KOCz6UP6EhAhG6vYNaeH323GL1ahQRyP85FZOMrZbx
YeSIoQg01/QMceH9mdFMYL+1RQRGraXbLmPXVpopv98hApvGTY0k8P4mWXDs
ZDcXgUTVtwLPsJ1ob12N9opA441m6lEcD7J/aGSgLX6+781EMRyvpmtTNXQX
Ebi4+3bCQxzPFIWSYTEvEehvK2G5iuPt9sSb1cpfBOTW6O85g/OBpZsBVSF4
vZK6nKdw/lwafZMbclEE5sychDJxfnGzZLFtuiwCfIVrGrqFaUhY26H+2S0R
WJW6UeyP8zN15wbVoEwR+HZV+PYHMRqSObQ+hponArWXTZ/tkMD1HPvBtPSx
CCwcG/xmhfO/OKu00O+FCFx4yvJmVIaGdMoTuMlvREDRxH1bshwNbRw2by1s
xdfNTlTwKtHQ7s21Vne/iYCV027uLA0aat9/p9T5lwj4bKbfztWiIWuv84Ly
MyLw+WNmVxmuV8dbRl23WUXBvuNR4SKuZ/+JMttbMqJQNFlvL4P7wY28PMfL
B0RBJGpnadxeGpJ4dfG1iYMoxC2O/TU/QEOZnUflOJ1FYaDrX6uILa6Hf9KM
i36ikNtPudOA+9VLu5vHQi+LQs7i2JZ7Hjj/eaN9/N+IgsFI45j6BRzfII9g
G831sC2JtsG5AvdTI7p1DmU93KOTxCZwfzZgsdcdM1wP7r3yV6KqaWhHvPm3
iJ3rodkitK6qEcc3n2zzwHE9bHnXXuT3CcevZ0qX7dp6cBKvDCyboSHO/yK+
l06vB9OJeLf1BkOI+Tf1IO9rMSjevy5r7uUQurtd/xStTgwGPXxCIl8PoaMJ
7ddKW8Rg+n76OF/tEBpQ4Wy27hOD+9MGGgqtQ+iD9cnNmdNigLTp27fShtCb
JxYK2prioLLse3ELKx2l+rGOWaWKQ8n16XePTOnIpiKTSzFbHETXqpn+20NH
wpwblafzxUFNHV0230dHiZn+jqll4rAjrH25156OLrV+bqe3icPWtvNZLd50
FKDx/GkAhwQ8lpcamI2jo91ffcKTAyXgxoWC5dlmOjIJV35oHCwBdxs+mz9o
o6Md6wcHZs9LgIbQ9MVDH+jIaJflxsPxErArPyOyqI+ONO/pTivflwBfddGI
td/piNd9xuvZoASwbDb2cGZloLX/HqZ6jkhA8MSanevYGYjjlnuD5JgEpKc1
oEoOBlqu/6R8fk4CinWVYnnWMtC4SsWQibAkaKpI9EQL4PmHGW7TZyoJmaAz
9lOKgZrCDKPirCRh7SX3fh8ZBqoXnXiyxVYS6ivHir/JMlCVsfO6XFdJiPO8
9aNHgYEe5u9o8Q6XhKERt/CragyU4LYGlsokYcvGTR1Oenj+WX7r/6hCEnZ3
ZeQWUxko5mZw1tFqSch6uFd3Wp+BztePLta1ScJ/L7+eDsHzkr/K+2fxPyRh
bvLFJZfNDGTFTNKSk5MClduyt5KM8ftqMXscVaTg4Rq+1pu7GGjPqQ3nb2tK
gcvTXskUEwYyYxvqlNggBZ6xuSxJZgy0Q0HrjMg+Kcg+Yz3ubMFA/zm+q14b
KQXiCoL/nbVmoPI8CR/Ty1KwP1xz3MKGgag/j4vEJEqBmczvKnlbBtIJEfZg
vy0FUuXxj6oO4nkt7SjvylMpoM1/H+x2YCCZngXb6a9S4FHXrxV8lIEypC1X
9calYIhS0SvvzECSx+4UBkxJgZhxyIN6bLEpk6VfK1IQIdrfwenKQIKCN+/8
EJeG4ovq+h5uDJRo992cJCcNhucZxnPY/DlG0+4q0pB2VjYu2p2BeHSGd41Q
pOHV6d5n6R4MxG6h85NmLg1Qd7nujhcDRd64eFNmnzRUvN93V9qbgVg+92w9
fFAa3LVE6m5gL3uHJvW5SkM9KbIr1IeBZmOb/usOlYYAVeFjWr4MFNQhTReK
lIazNSeuJmFPi524vO+yNCw7vOGaxv5zb/3ntpvSoLfsulqK59+xOtcLTY+k
obVv/2aeEwwkf73PJ7FcGt7SW0acsW2crGxtKqWB0XkivBz7zfwmTUaTNOy9
eeH6gQB8/3elogUd0uCcWyScha1+Q3X1+Cdp8O4JTmZiJ2sL9cyNSIN/69Jt
n0AGalyMefN6DN/vXB25CHu5cbkwalIaJlkcWpjYHq4/wtetSsMJ1Tgj65MM
dFvXyesjpwzc35goGoPdudx94DafDHT9ovA8x96c+pZEkpKBNRM37fhP4fnd
7T/hXwoyUCsu9MIAu0DvwXIZSQYun8vd7oD9eUXhe7CODFRWbFkKwRZ8n/Jh
238y8D1o5Hs69q50viqOLTKQq32H9zl2iEdkQcsOGXhrFOvTgV2qP5+UZC4D
u52fr/2GzWTxDz24TwYyn1qPLWBLto+4y9jJwEnjBBHeIJz/tx32fTkiAwO8
6ZclsaO8OowK3WTAur/cUhX75X+7VP2P4+cjNU8d7F9slesMTsrA9iijfgNs
pU7K4kIwXu8lk8KN2HZZBcy3ETIw/LigbxN2vI9MR3SMDDz5+cafuF6zIbli
T4IMpJxf9Ce+P8uxNl/opgwIc76naWNrdYUn9mbIwG+HR29VsJ1zpoOzcmXA
8ZK8JPF+t3y9jx0rlAHee8W/ebBbNtEtNUplwHiEZryI17fKZbtx4pkM8Bza
q/Ad26CnRelZlQzocmZGf8D2zgX+0DoZOF3iea4CO9v/+Ry0yEDegCNLDnb3
ZvIXrg8ywHWfLB+JvZb77vv3vTKQxpI44Iq99ZP4i+QhGZj6s2XDduyTeQm5
9l9lYGfM4iZZbNrWc2eYUzIQFfbGuB3HX5h3wrl4QQY2uh09mIdt1ue2J4BF
Fvj7diqewS47uU9hmV8WjHhhVhT7O2rgqRWVhVtnxHmGcb7J8G/5GystC89z
nowVY8fcJ7WIaMjCtk6a6kbsyqCs8n5dWfz750DcEs7nP9tFcnIMZcFGyaqj
CvvQ4MopLWNZmF5tE9iErSP0SXbnUVmIe+v2RwLXy7eEb5G33GUhZ4e6+Ad/
Bsrimfv+/bgsZGVsjo3F5uOQKIsPloWPPp+tJ4h6nHUw+XRdFno9ZEUe4Hq9
N0jz966XBfm9dh2fcP07OvzurmyRhadeFudPY4t+Wtko8EEWvqQdrhDGjuyQ
Z39KkwWDnXeZZrifONe6pC7PyoKhwM/ofNxvZAq/vr2mIQdObSb5MscYqEdl
VuWLrhxIPx8QKMD97GouV5yBoRzw5syZ6WAvZpBs+nfIQcejjC2bXRioL8H7
h5KjHDyRW00xxf3yxqlfgs8T5UDAa7xa+zDub+ivy+C0HJy14h+0OMBAwdvV
1z5flIP94sc6H+zH+7HzcMk1Vnk4dFRtkRu71qxmccc6eZhWV2Kr34vr7UDC
jSJNedA58F+AriUD/XRXfXfGRR7M7ipK/DDF50e8rbpQhzyw7s3VYdvKQKa/
Ds0p2SrAL4MqqW58fmWLRnVH2CvAum2fVtWwZzY/KB08rAAvdJx1QlUZ6E7c
kmeKqwIsGE4GqeDf74ukzD7uAAV48CeLLVQRn4eutIo/cQrwLjpz0Aifn4J9
R8PeVCvAYv7aP5LCuD+txtpL1ytA5Poz/WFC+DxVe2wQ3KgAt8zTPBmCOP9P
s/zSa1cA7xnP0KJ1eH3CuUfufVYAodNXanby4/5s+WVb/KwCvNF88iQDn+d9
tW6sh8iKsKkxtvbtKh3n14BUuK4iFLY4RjSt0NGamr0Gd6iKkJn7ob7rHx0Z
vjXy/LZREZJetk39XKKjm5WCbSd3KcIXLU5JvXk62ltelXbVSRF2+vQ7rJ2k
Iw99almJiyLInX+ZpfmHjs6X3W/94KYIGTFscVYTdPTwcfKK+HFFsP29x/X2
LzrieeTlln8Wf57zyhbzMTpquCdKeZ2kCBYe71pnR+hoSCXOnHFDEdwteHcY
YP/NW3VlT1WE0Pbm06e+0JHK3bFb5lmKMOERLznHoKPI7Oqlj0WKcCp83kdk
iI62pfo2/q5VhMpUt8938Hx0UOwLQ6hBEdrPH7m82EtHfrfsFg2aFSHGo/af
LXbmjR3aoR2K4DywZafwJzpavCZxY82gImxOZ8Kdbjp6drneSeGvIux5mqYu
3EFHhbtbJWLnFUGk8eyfsHY6yuDr6vq1pAj2J551jeJ57UIS3aSSTQkMzdDX
5vd0ZJG2qHNQUAmMPhRszGuhI3SIdbRKRAn8DL43y2FTZdbmKYsrwctLcDIT
z3/id9aLT8oqQeTjes7sJjr6cp+yelVLCSxWXFReNdDRR+8NFVM6SnCvifOw
CXaT1rZTDlQlMN/54m7POzp6VLrnu9omJVixCXKZq6ej4BceHTUmSvBrITDC
to6Ojp/zu6K+Wwmc+r8rTtXSkdPmoJ3XLJXgTV7D+yTsnW8vvnC0UQKefU8M
e2roSKAxM2fORQmUXZr/O1VNR6xX8hyc3JWgXtthVh57ZnexyDsvJdhxYGd5
+1s66m9/EZt8QgnEPKcUqdj5n7pOaIcrQcILz1TBN3ieTuvXuHlBCV40l69v
e01HcYcYI4tRSvBhs+ilq9gnhn7ZNcUpgUlvg4YAttG3tXAsTQkGe13dNKvo
SLtw3WLzbfz+i0yd2Uo6UvARK6fkKIFuqupAHTbnb2X1lXtKcP/G/RY37PlS
zS9uRUqQebaCdyP2WKBeZutDJeAW1lLlx+78u00w/akSvGu40Ff1io7qXuxq
WX2uBMeP//NLxX5+zuKSxyslqBHg7T6FXbjZelvba/x9E3fOA9i3/znM69fg
/VGvYaNiJ751LsuoVwJbz7YmEewLFz19WZuUwM6PajtXgeuF8zSjvR3Hc/bK
izpsKfnm3qUPeH0fb3CUYLdvlO1Q/6gEOyVOfUzHjjwQ2GDbh697k9RjsQ19
372O/KwEEf8eLJ7GHouWfFY6pAReOXO7PbCzc/weDg4rgXzTspg99oGKmjzu
r/j5pUWOe7C5utffNvyhBJ+d8BCN/WrcO/nYTyXwf5dtYYjtz/XmStJvJShv
LpnSxlZSEL74elIJRI7McpOwP23yCB6bUYKcxL1Jithx1q9OiM8rwWJWUpQs
9jY/AU/jJSXYIhA/LIU9FePqFLiiBL0vBQslse/deW6bzaoMEYzRHsL2r3gs
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
BsUBI0d/7Bd20Sx8rmSQUKgW8iPi0x4RR3Enw5nowtHj2G+MQ0RtvcjQO1w3
4kPEqzIo+9xxMjSXDq96E/HSO6Ge7U8GdoEPWwnvLvQuqw0kQ0q1c5YXdpuc
25bvQWRQoh6VI7zvllMDbzAZBE5nVHsS8eN12EcJJcNLY0YUYftI6wGb82Qo
5lrxJDw4b+l27iIZDrdW+xJ2PmH2O+sSGfJM/l4nPPJ1R3BtLBm+93r2Et6R
035X8yoZXkcxTIjn3bE/1JacSIbPr19/Jrwq9G1u8ToZNj6sukW8r1NroNKx
W2Q4LpYRRKzv9aV/Fq1pZLDyEA4m1i+z7cpZ/UwyPCkczvHFDp0TvXs7hwxz
CXU/if0aeHznPXseGZp8Th0m9neTD3nueAEZKjY+/B2Anab8UrGniAwTKer3
TmLPDe602PKIDF0td88HYR9M6TiT/5gMD6p7Qoh4Ptt7OJevnAx2fMHpRLxF
ub+3Br0gw+joroEQ7K7QFYVdb3B9pBrXRGDr/Re351ENGTbrf/Mg8ivp9/oz
69+R4ZDgTW0i/6xctFu/tuJ8C5yWIfLzkVTFX8sOMsT3i+wi8pevx1jheRcZ
nu6RS7iO3WLieDqmnwxij9+HpmFrsPzI+T2I87OZppiJfbniVMtBBt4fo6ff
crBNyFflSd/JMCUZ1Xofu1boVXPjDBkMnyUvvMRWbN01oztPhoDZvITX2Bcu
fZBLWyJDDLvKtlrsbXM/TnmxaYOVxI7pVuxXg+Jy3ILacLn50T0Gdtn90yd3
a2nDFY/6HwK4vwi5sGaV6WhDm5W2wnrsAKmERimqNlz/uOOENLZOQr7Mz43a
YLJ3u7U6dvHJ7oarJtpQJqmvuRP77lY96TYXbYgqrOkMw6614olactMGxym7
oSjsL0dHxjS8tGHjD6/lOGzlyFuvYvzx++xm807Hzm9YcIBQbfj8bt+/59j3
9tamPb2J75+4hzaDXehiLZbRqA3f31/vOIf79aPo00Ke2jpwQ1L/8e1l4u9D
RyKjKTrw+r/S/vxlol6Np/P0deBmLZWzBLvYVfQjY5MOnFqf4FKNXYieph0y
0YGz+y01v2LnL/yRtzqqAw1WZd06+LzL8PPV+e+6DqjZDdrWYA+o2ORY39QB
2Wx+7xZsycHNgidTdWC/0Kfgbuy03bxTJVk68MflVsJX7Fuk4mfqxTrQbl0V
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
D0p8l4ffYf8f+wQ3uQ==
                "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                Opacity[1.], 
                RGBColor[0.24, 0.6, 0.8], 
                AbsoluteThickness[2]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 (Identity[#]& )[
                  Part[#, 1]], 
                 (Identity[#]& )[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.24, 0.6, 0.8], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                (Identity[#]& )[
                 Part[#, 1]], 
                (Identity[#]& )[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>], 
        ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
       False]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJwl2nc8le/7AHC7zKzsvY5xcBw+Ko37qmQUGgglITtEqWSkCCUklZWRSKgo
aYjKyswIZeQ4R06DlIzs+N3P9/dXr/frOed5nvu+xn0drxRdTxxwZ2NhYXHh
YGEh/s0678ql53Z7GwtL0I7XUhu31ncrWNgpnEMjbbfqZMqnt602vIlSULiC
ls+FtxsViCCB5OePefqSUUOElPrmdWooqzpBnlMhHRlklmtwXtdH5Am3xFXP
HOTpKFI5dXEboglkryz33kU5y6XaW3/uQioF3IaLS/fQrTDDact3lsh362m/
OfkixDGwvv6mhzV62sPIn9n5EO2ZdGh1v2CPFo9bDE56lqKSzC4HMV0ndId1
8MrcrieorG0lr3OjKzJuu64621uGhqxNxS/kuaMfaaY1M97lKDyh8ud6O28U
7/bPcXrpGbodLrtWwNoPdS953fwjX4Emhi+/WyN0Cp1plKNMPHmFOjZsauUK
OY2kbvS0/tpZhaTIHQe1uIKRqyaw//R8ixSmhc59iglHbEshHTNh1ehISU6u
z9YLqIdhKzuzqwZJdFaOBzVdRMEPeSumemtR10Z3XkWhaLQ7+RvX1J06JB42
xXq+PQbJBNfYTHrXo0MpsnKOmZdR9c6zfyaW3qGA4UdcQt7xaM3nL6Rf8s2o
V2H04y6XZNRX/fr0+I9mlPSq/IjghRuouCCt7ueTFnRjJX/HtYKbyOqk1dGx
ne9RQ7yBxTGeVJTC/Srlu2cHWiZNdQdqZaLys7tPnpLoRKIT2g6/orNQ5tgG
yemwTvT1T2tG4vds5N8p7Dm16wOyqcpX/0e/g4Qzm9gme7uQIm9K4pvhPLQk
8LwoYEs30p16VJZSnI+YF/P2/bnTjUjDMYEVZ+6h557nsye8e5CA/qeTryTu
o0P6Bka/lz6i/EsZqw8ii1FuS07gT/l+1M6epq41/RjNpD3TpMf3Ix9ns/e2
IU+QiWfrSNdCPzpYYZEsyV6GxtnnbF91D6DLNWm2tpJP0catVkZXYgfR9gWb
G0t2z1Bn6TIbaYKOhoI3z/2VeIUiWsi79Y6OIE/Bk+UfoBaVlF757Kszhs6L
xxz3HWxDY8Jj8btdxpDSqc/nygzbEenM7m3qN8eQd+CfUpHr7ejOFt7ckYUx
tDyY/l7epAMlN8d7HHr3E7WbBZ2+ad+JzoxcmzR1/IVkMjmsHtZ/QDm8rVFC
u/6g/q7/6I0ZPWjb1lDHC05/UNqOPNmPjT1o0F/rv4mzf1C6BwrvnulBEl1X
v70v/oN6ItRP37H6iK6nWZhfFpxE98bpp9xZP6Eo1XaB1c+TiL1k964p117k
iT6kj5+cRpwx0W0KQgOI5e7sq89XpxFXj6aJmNEASuOQGWzJn0a9TsmCP1wH
UFOzh1zRp2m0bYf5MbnyAaRus3zX3WgGhQSx9jTYfEY/vEgPh1j/ouclf1KS
EweRT3L4m86kWVS5483desYQYvt7l/62CPvR+i4rDjrKsGtiKa2dRd4b6uML
SHTUIiOyM2FmFknrFVFf+9GR1v3CRnP7OZSp/i80fI6Oxiu7O2vl51Gja5vP
hQsM5P9VY6S8ZAFNUbmf8J4eRgyn/rU1zQtI2I8j48alYWTdd1mnjbmAxn8H
lM3fGEYbW7+f+yq1iLhZTqw4lA0j9if3BMViF5GFvp7ImV/DKC1McdvZo0so
zEGufdXxC+KZ7TwWFbKETiUoa+z1+YLCT1y4cu3WEjIljdiEnP2CXF3pPfdb
8eerrb8fu/4Fkc2yjvdtWEY80Sn3I+u+oBoRyfRNgv/Qn6HAiW8KI8ggoenN
Lq1/iLwhtvS31ggq4Apm7jf5h2TTy5s+GI6g+IVPuj5h/1DtkD6XpsUIOki/
2ZDx4x8q/zLer3R6BDXZG48XsK+gzHblK5wRI2hz17TQU7kVFJg3da/u8ghS
eHfgSKvNCvI0j9vedXsEjRULzixVr6Btk6qDm6pHkKNKteTawRV0zIfUPt80
gjqyTiDRuRX0a5Y/6MaHEVSe1B5H1l5FJ81+8Dl+GUERZ+IVj6Svopk/ljOb
2ZiIR/ESib6RBSzXT/8x3sxETVuu657fxQKxNn8O2G9nohj77A2yB1hApSZ3
raUpE7ElvTQ9fJwFNCIcXw0cYKLFlXHP3iwWaMmRc77ixUQvpRZPnClmAVaT
vdFFfkx0xnBN8PoXLMC7s+nOg5NMNOWneNm6kwXOByeIHgxjop+DtoUdbKzg
o73+vEkiExXPuz72X8cKrus4h4OTmchLNOAlvwwryPheX0hIYSLmnrimPf+x
wgY+lafO2Ux01zO1c2w7K7zx+ndZ7i4TOUfl912xYgWL5+Ln395josFXb340
erLCzi4+gwcPmSjjU+sfjyBWOFI0RJ4tZSL7qb55zous0N1AK1d5ykQ9GtNr
jTNYYXJj1DdyBRO9TyNpVL9nBfJ7KeFfdUwUV26gd7SfFe6q7K2za2Ais87t
m1a+4uu9vn8Lmpiofo2j+ZZVVjj8ZvDw9HsmilT23v+Zlw2On3/T+aediQCd
cQiRYAPZnwWm3Z1MVHUmyfulHhucSt9UbdrDRCHJWYF229jg3jZOzoGPTLSx
pPjc7G42MLkh0bW/l4lmm19cvGXHBqGtLealfUxU/rX+ioEbG5T8rE6c6mei
k6xd17sD2MD/23id9GcmosjS00+Gs0HXk3g+rUEm+r1xPFcojg1I29TjFWhM
9MhmoehxChuEmCV6LGP7BnCV7c1jg7uc3W/fDDGRZrzIq9+lbNCD9lZ50pno
x32F2oQqNuAKyrkwh11Qp91CbmYDq4m7ev4MJnKjG3W1fmSDneMhM63YSkum
Az5f2MDx8ZXfgsNMxBCz/cI9gT9fFLhrK3Y21XWscIkNAuJE5fdjO1qdmDJd
yw4SPsm5FthSPmGL30TZYXnIbFoXuy/6CluMIjskyXYZLeH7p+Sm8KjqsMPx
9Rw5Jdg2r/OE643YISNxwmQ3tnD/Y6ljpuzQUTXk0I7ft3PmtRKbDTsULu9f
NcJOFGzVzHVmh7ncFackvN6KDbLPrPzZYVpQ6chrvB9MpxNoOZQdvPat9+rA
+ycYU9NcdIUd4u10njbg/d38SMTGLpUdQtetOZk3wEQePe5DHPfYQW0itM8d
xyN56YVXWRk7mKYWSwngeP0wdwznb2eHY1tG2YVwfEUDS9ZUfmYHo0Y/Ud9u
JkJpLMleo+yg5J/c/egDXt+3/II6Dg6IlNPV/9bGRDX8c5RAYQ7w9vu5jdbK
ROMG5pVyChzwOqKlo7KZiXZG/eo4t5kD9A0KHCjvmMi/GB0imXNA2dOgtw21
OP8/XGf2HOSA46Q1l3ZVM9EfecMF3ZMccOsTH+e/VzgeVeeVvhVywPPwj38c
cH00j3Q+vPGcA84Kv7HdhOtnhkd5w/Z6DmhpfNjDVsREexwa92TSOWAk+huL
La6/+b/rTh8Q44RPgfybl28wkbKs6+qqMif0e8amUpOYyMq4/MojPU4w1j38
wSaeie4l22evteSEkPSw6iOXmOiAbm7jmyhO2HyrsCn2FM5PL6qU1iQnMLvN
4/2tcPyvXcrvW+EElqidUeHmTMTx4pNODB8XmCv9HQs1ZqJDnKE7h0lcsF9R
cMrUiInW3q3zTXXigh0SpqrKqkzk+tnmLft7Lgi/tPk/ifkRxHN72C+wnwtM
n9xKtZkaQWWH/GXo37gg97x40KXxEcQ+EHvuFesa+JcxGviWMYLy+17pB25Y
A3769vaFuN9++6hQOHR3DehYzhsFpYwgn87xpIpza4FvgN3JBZ8Hge8uuZ4g
8YCPwJ24gF1fkBzThGtWnweqGvXvpW/7glrZuIvDgAfqlClBtRu+IFVImLzi
wAPDDm+fi2h+Qf2vbl3Iv8oDY/uoZ14KfEHbHxdk90/wwNo19wJIfcNI6HbT
wM6XvNBE7c4O8h1GbyrizrfU84J0knPfB/dhdLzPQmn/B16Yfp+SRj06jN6t
/+DtNMYLinybJVb3D6NzSf3zwTJ8wJW39LdhwzAajh4TK7nAB0ZM8ZPqHMPo
SQCftYQ5PwzPnVPsu8NA7zNEzj06yA8HVw9r2WQw0Ld6qZwdbvxwYMdqfe8N
BpKS1PjpG8EPK56i3LMxDHSpZldUzTN+0M3L973ux0AHhSOe+igJwGH7q3vs
tjBQwJaY/lVdAbBbn73OzpCB4jwSVm9uFQC3h+vrjlIY6O2r23ve2guARMYl
43gVBlI/9nJE5JoADNJVnlnzM9Di00mR10sC0O03Wnawho5Eh+Y3HeBeB2df
DZReek5HOmtZnL+LrYPXbcF3Gx7Q0TFHgYdC1HVglDPaG5NCR+85tIw9vNbB
XSkXnyVfOsq2dQta93Ed7KMI2LTI0lFu6PExip0geK5yGly+NoQo1dzzsUcE
4ayGnsZo7BCq5ijkpB8ThKwcvugjF4YQI4GpkBAgCHu3zsZfCBxCcneO2I1e
EQQdaWbcY5shlFG/tz63ShCyo8Usq+SGkCb37w/ztYJQfTdI5qDEEKqwjKfv
bRaEOzsEbrALD6G+T02L/z4KgkMNW3A65xASG92ud2hCEPxTPko++UVDyfwG
2cJKQrB838oksYaGlA50PfBWF4Lv7+b+uVTR0JOUgIpqHSG49/zEJvMXNNQp
/6jHf7MQFCttUjvwiIYEqGq8rTZCwLmpnWyZQUPZZ+ollA4LwYkX7IerbtGQ
dqWr2jkXITgcPde37ToNWRjnbCf5C0FPweO88Ms0FHdQIjgqVghaRndHDJ+l
Ianbz6MHEoRgRe3BxrFTNFREt7mhd1MIlJ7enOcMoKEmr+sl9DtCsLDOz+WM
Fw1xhfJ83fxKCAbr1mduOkRDKW8Lp5KrhSBQqmtf/0EaUuUwZRlrEIJXQ9Kl
V61pyDghSjqtWwj6L5sbqFvSUGTO8v6ZcSG4pT3G3LadhvZRXgZqTQsB5bK6
3YVtNCRXc+q664IQML3lrLo309CrL2OdnZzCkHDrd9IjQxq6fKrgzxo+YYih
xb81MKChgxyugkhYGGgcvhvb9GhoSrV/7yM5YVBa6G/V06ah6uc3TzBVhCFT
a0/jP00aSjTdd01aSxg63OraB9RpSNO7sf3KBmG4XipY06hCQ64Pn1l67BOG
1WPtLsdlaYiyNdAv66AwOBW8+fVamoZW2sgJPY7CsPt9wYqCFA1lTOS93+Et
DMrpQ54S4jTkdeHo+LkTwvAj6Pfth+tpyFBImu/JaWGgLJ7l2y9KQ13U5D3y
kcIQcdfGvkWIhu7UWR4/eFkY1s185s8RpCF/G+6rCYnC4HDUpDxqHQ1t+Vpf
XH9TGELOGm4MFqAhnjMXWpYyhGHXBoWYMH4a6uPaMkbNFQa2EvO4JD4aKkid
4/a5LwzqD1sp5bw0tL3C37zvqTAIWzuJavLg/Nmt6b3ulTCcO12vHsZNQ4MD
Xy+bVAuDoK9uIm0tDRUfzy0MbxCG4HG6rhV28LJjU/l7vB/nfs23raEhkwSJ
Hz+7hMFO2LTHEVtUrmeNcj/en4GnDxe5aOhLyTXSIbowdLd0+97Hfoz2mF7/
KgyyRxRWXbHPd3J5Nv0UBo6Nvyy1sS1camNWJ4Xh5KDXTi5sqanwAsN5YdA7
kNX8i5OGfkRuavBbEYb7PQEtI9jPRf5+zecQgUMXCnR/YF/Kf8w5yCMCziz0
L4vYB/7zVRUREoGs+rQ2aXw/hQbSrt3iIqBrRenfjf374IjbRVkRYO1h/I7F
rvqefemlsgjo/6yf68KOCz6UP6EhAhG6vYNaeH323GL1ahQRyP85FZOMrZbx
YeSIoQg01/QMceH9mdFMYL+1RQRGraXbLmPXVpopv98hApvGTY0k8P4mWXDs
ZDcXgUTVtwLPsJ1ob12N9opA441m6lEcD7J/aGSgLX6+781EMRyvpmtTNXQX
Ebi4+3bCQxzPFIWSYTEvEehvK2G5iuPt9sSb1cpfBOTW6O85g/OBpZsBVSF4
vZK6nKdw/lwafZMbclEE5sychDJxfnGzZLFtuiwCfIVrGrqFaUhY26H+2S0R
WJW6UeyP8zN15wbVoEwR+HZV+PYHMRqSObQ+hponArWXTZ/tkMD1HPvBtPSx
CCwcG/xmhfO/OKu00O+FCFx4yvJmVIaGdMoTuMlvREDRxH1bshwNbRw2by1s
xdfNTlTwKtHQ7s21Vne/iYCV027uLA0aat9/p9T5lwj4bKbfztWiIWuv84Ly
MyLw+WNmVxmuV8dbRl23WUXBvuNR4SKuZ/+JMttbMqJQNFlvL4P7wY28PMfL
B0RBJGpnadxeGpJ4dfG1iYMoxC2O/TU/QEOZnUflOJ1FYaDrX6uILa6Hf9KM
i36ikNtPudOA+9VLu5vHQi+LQs7i2JZ7Hjj/eaN9/N+IgsFI45j6BRzfII9g
G831sC2JtsG5AvdTI7p1DmU93KOTxCZwfzZgsdcdM1wP7r3yV6KqaWhHvPm3
iJ3rodkitK6qEcc3n2zzwHE9bHnXXuT3CcevZ0qX7dp6cBKvDCyboSHO/yK+
l06vB9OJeLf1BkOI+Tf1IO9rMSjevy5r7uUQurtd/xStTgwGPXxCIl8PoaMJ
7ddKW8Rg+n76OF/tEBpQ4Wy27hOD+9MGGgqtQ+iD9cnNmdNigLTp27fShtCb
JxYK2prioLLse3ELKx2l+rGOWaWKQ8n16XePTOnIpiKTSzFbHETXqpn+20NH
wpwblafzxUFNHV0230dHiZn+jqll4rAjrH25156OLrV+bqe3icPWtvNZLd50
FKDx/GkAhwQ8lpcamI2jo91ffcKTAyXgxoWC5dlmOjIJV35oHCwBdxs+mz9o
o6Md6wcHZs9LgIbQ9MVDH+jIaJflxsPxErArPyOyqI+ONO/pTivflwBfddGI
td/piNd9xuvZoASwbDb2cGZloLX/HqZ6jkhA8MSanevYGYjjlnuD5JgEpKc1
oEoOBlqu/6R8fk4CinWVYnnWMtC4SsWQibAkaKpI9EQL4PmHGW7TZyoJmaAz
9lOKgZrCDKPirCRh7SX3fh8ZBqoXnXiyxVYS6ivHir/JMlCVsfO6XFdJiPO8
9aNHgYEe5u9o8Q6XhKERt/CragyU4LYGlsokYcvGTR1Oenj+WX7r/6hCEnZ3
ZeQWUxko5mZw1tFqSch6uFd3Wp+BztePLta1ScJ/L7+eDsHzkr/K+2fxPyRh
bvLFJZfNDGTFTNKSk5MClduyt5KM8ftqMXscVaTg4Rq+1pu7GGjPqQ3nb2tK
gcvTXskUEwYyYxvqlNggBZ6xuSxJZgy0Q0HrjMg+Kcg+Yz3ubMFA/zm+q14b
KQXiCoL/nbVmoPI8CR/Ty1KwP1xz3MKGgag/j4vEJEqBmczvKnlbBtIJEfZg
vy0FUuXxj6oO4nkt7SjvylMpoM1/H+x2YCCZngXb6a9S4FHXrxV8lIEypC1X
9calYIhS0SvvzECSx+4UBkxJgZhxyIN6bLEpk6VfK1IQIdrfwenKQIKCN+/8
EJeG4ovq+h5uDJRo992cJCcNhucZxnPY/DlG0+4q0pB2VjYu2p2BeHSGd41Q
pOHV6d5n6R4MxG6h85NmLg1Qd7nujhcDRd64eFNmnzRUvN93V9qbgVg+92w9
fFAa3LVE6m5gL3uHJvW5SkM9KbIr1IeBZmOb/usOlYYAVeFjWr4MFNQhTReK
lIazNSeuJmFPi524vO+yNCw7vOGaxv5zb/3ntpvSoLfsulqK59+xOtcLTY+k
obVv/2aeEwwkf73PJ7FcGt7SW0acsW2crGxtKqWB0XkivBz7zfwmTUaTNOy9
eeH6gQB8/3elogUd0uCcWyScha1+Q3X1+Cdp8O4JTmZiJ2sL9cyNSIN/69Jt
n0AGalyMefN6DN/vXB25CHu5cbkwalIaJlkcWpjYHq4/wtetSsMJ1Tgj65MM
dFvXyesjpwzc35goGoPdudx94DafDHT9ovA8x96c+pZEkpKBNRM37fhP4fnd
7T/hXwoyUCsu9MIAu0DvwXIZSQYun8vd7oD9eUXhe7CODFRWbFkKwRZ8n/Jh
238y8D1o5Hs69q50viqOLTKQq32H9zl2iEdkQcsOGXhrFOvTgV2qP5+UZC4D
u52fr/2GzWTxDz24TwYyn1qPLWBLto+4y9jJwEnjBBHeIJz/tx32fTkiAwO8
6ZclsaO8OowK3WTAur/cUhX75X+7VP2P4+cjNU8d7F9slesMTsrA9iijfgNs
pU7K4kIwXu8lk8KN2HZZBcy3ETIw/LigbxN2vI9MR3SMDDz5+cafuF6zIbli
T4IMpJxf9Ce+P8uxNl/opgwIc76naWNrdYUn9mbIwG+HR29VsJ1zpoOzcmXA
8ZK8JPF+t3y9jx0rlAHee8W/ebBbNtEtNUplwHiEZryI17fKZbtx4pkM8Bza
q/Ad26CnRelZlQzocmZGf8D2zgX+0DoZOF3iea4CO9v/+Ry0yEDegCNLDnb3
ZvIXrg8ywHWfLB+JvZb77vv3vTKQxpI44Iq99ZP4i+QhGZj6s2XDduyTeQm5
9l9lYGfM4iZZbNrWc2eYUzIQFfbGuB3HX5h3wrl4QQY2uh09mIdt1ue2J4BF
Fvj7diqewS47uU9hmV8WjHhhVhT7O2rgqRWVhVtnxHmGcb7J8G/5GystC89z
nowVY8fcJ7WIaMjCtk6a6kbsyqCs8n5dWfz750DcEs7nP9tFcnIMZcFGyaqj
CvvQ4MopLWNZmF5tE9iErSP0SXbnUVmIe+v2RwLXy7eEb5G33GUhZ4e6+Ad/
Bsrimfv+/bgsZGVsjo3F5uOQKIsPloWPPp+tJ4h6nHUw+XRdFno9ZEUe4Hq9
N0jz966XBfm9dh2fcP07OvzurmyRhadeFudPY4t+Wtko8EEWvqQdrhDGjuyQ
Z39KkwWDnXeZZrifONe6pC7PyoKhwM/ofNxvZAq/vr2mIQdObSb5MscYqEdl
VuWLrhxIPx8QKMD97GouV5yBoRzw5syZ6WAvZpBs+nfIQcejjC2bXRioL8H7
h5KjHDyRW00xxf3yxqlfgs8T5UDAa7xa+zDub+ivy+C0HJy14h+0OMBAwdvV
1z5flIP94sc6H+zH+7HzcMk1Vnk4dFRtkRu71qxmccc6eZhWV2Kr34vr7UDC
jSJNedA58F+AriUD/XRXfXfGRR7M7ipK/DDF50e8rbpQhzyw7s3VYdvKQKa/
Ds0p2SrAL4MqqW58fmWLRnVH2CvAum2fVtWwZzY/KB08rAAvdJx1QlUZ6E7c
kmeKqwIsGE4GqeDf74ukzD7uAAV48CeLLVQRn4eutIo/cQrwLjpz0Aifn4J9
R8PeVCvAYv7aP5LCuD+txtpL1ytA5Poz/WFC+DxVe2wQ3KgAt8zTPBmCOP9P
s/zSa1cA7xnP0KJ1eH3CuUfufVYAodNXanby4/5s+WVb/KwCvNF88iQDn+d9
tW6sh8iKsKkxtvbtKh3n14BUuK4iFLY4RjSt0NGamr0Gd6iKkJn7ob7rHx0Z
vjXy/LZREZJetk39XKKjm5WCbSd3KcIXLU5JvXk62ltelXbVSRF2+vQ7rJ2k
Iw99almJiyLInX+ZpfmHjs6X3W/94KYIGTFscVYTdPTwcfKK+HFFsP29x/X2
LzrieeTlln8Wf57zyhbzMTpquCdKeZ2kCBYe71pnR+hoSCXOnHFDEdwteHcY
YP/NW3VlT1WE0Pbm06e+0JHK3bFb5lmKMOERLznHoKPI7Oqlj0WKcCp83kdk
iI62pfo2/q5VhMpUt8938Hx0UOwLQ6hBEdrPH7m82EtHfrfsFg2aFSHGo/af
LXbmjR3aoR2K4DywZafwJzpavCZxY82gImxOZ8Kdbjp6drneSeGvIux5mqYu
3EFHhbtbJWLnFUGk8eyfsHY6yuDr6vq1pAj2J551jeJ57UIS3aSSTQkMzdDX
5vd0ZJG2qHNQUAmMPhRszGuhI3SIdbRKRAn8DL43y2FTZdbmKYsrwctLcDIT
z3/id9aLT8oqQeTjes7sJjr6cp+yelVLCSxWXFReNdDRR+8NFVM6SnCvifOw
CXaT1rZTDlQlMN/54m7POzp6VLrnu9omJVixCXKZq6ej4BceHTUmSvBrITDC
to6Ojp/zu6K+Wwmc+r8rTtXSkdPmoJ3XLJXgTV7D+yTsnW8vvnC0UQKefU8M
e2roSKAxM2fORQmUXZr/O1VNR6xX8hyc3JWgXtthVh57ZnexyDsvJdhxYGd5
+1s66m9/EZt8QgnEPKcUqdj5n7pOaIcrQcILz1TBN3ieTuvXuHlBCV40l69v
e01HcYcYI4tRSvBhs+ilq9gnhn7ZNcUpgUlvg4YAttG3tXAsTQkGe13dNKvo
SLtw3WLzbfz+i0yd2Uo6UvARK6fkKIFuqupAHTbnb2X1lXtKcP/G/RY37PlS
zS9uRUqQebaCdyP2WKBeZutDJeAW1lLlx+78u00w/akSvGu40Ff1io7qXuxq
WX2uBMeP//NLxX5+zuKSxyslqBHg7T6FXbjZelvba/x9E3fOA9i3/znM69fg
/VGvYaNiJ751LsuoVwJbz7YmEewLFz19WZuUwM6PajtXgeuF8zSjvR3Hc/bK
izpsKfnm3qUPeH0fb3CUYLdvlO1Q/6gEOyVOfUzHjjwQ2GDbh697k9RjsQ19
372O/KwEEf8eLJ7GHouWfFY6pAReOXO7PbCzc/weDg4rgXzTspg99oGKmjzu
r/j5pUWOe7C5utffNvyhBJ+d8BCN/WrcO/nYTyXwf5dtYYjtz/XmStJvJShv
LpnSxlZSEL74elIJRI7McpOwP23yCB6bUYKcxL1Jithx1q9OiM8rwWJWUpQs
9jY/AU/jJSXYIhA/LIU9FePqFLiiBL0vBQslse/deW6bzaoMEYzRHsL2r3gs
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
BsUBI0d/7Bd20Sx8rmSQUKgW8iPi0x4RR3Enw5nowtHj2G+MQ0RtvcjQO1w3
4kPEqzIo+9xxMjSXDq96E/HSO6Ge7U8GdoEPWwnvLvQuqw0kQ0q1c5YXdpuc
25bvQWRQoh6VI7zvllMDbzAZBE5nVHsS8eN12EcJJcNLY0YUYftI6wGb82Qo
5lrxJDw4b+l27iIZDrdW+xJ2PmH2O+sSGfJM/l4nPPJ1R3BtLBm+93r2Et6R
035X8yoZXkcxTIjn3bE/1JacSIbPr19/Jrwq9G1u8ToZNj6sukW8r1NroNKx
W2Q4LpYRRKzv9aV/Fq1pZLDyEA4m1i+z7cpZ/UwyPCkczvHFDp0TvXs7hwxz
CXU/if0aeHznPXseGZp8Th0m9neTD3nueAEZKjY+/B2Anab8UrGniAwTKer3
TmLPDe602PKIDF0td88HYR9M6TiT/5gMD6p7Qoh4Ptt7OJevnAx2fMHpRLxF
ub+3Br0gw+joroEQ7K7QFYVdb3B9pBrXRGDr/Re351ENGTbrf/Mg8ivp9/oz
69+R4ZDgTW0i/6xctFu/tuJ8C5yWIfLzkVTFX8sOMsT3i+wi8pevx1jheRcZ
nu6RS7iO3WLieDqmnwxij9+HpmFrsPzI+T2I87OZppiJfbniVMtBBt4fo6ff
crBNyFflSd/JMCUZ1Xofu1boVXPjDBkMnyUvvMRWbN01oztPhoDZvITX2Bcu
fZBLWyJDDLvKtlrsbXM/TnmxaYOVxI7pVuxXg+Jy3ILacLn50T0Gdtn90yd3
a2nDFY/6HwK4vwi5sGaV6WhDm5W2wnrsAKmERimqNlz/uOOENLZOQr7Mz43a
YLJ3u7U6dvHJ7oarJtpQJqmvuRP77lY96TYXbYgqrOkMw6614olactMGxym7
oSjsL0dHxjS8tGHjD6/lOGzlyFuvYvzx++xm807Hzm9YcIBQbfj8bt+/59j3
9tamPb2J75+4hzaDXehiLZbRqA3f31/vOIf79aPo00Ke2jpwQ1L/8e1l4u9D
RyKjKTrw+r/S/vxlol6Np/P0deBmLZWzBLvYVfQjY5MOnFqf4FKNXYieph0y
0YGz+y01v2LnL/yRtzqqAw1WZd06+LzL8PPV+e+6DqjZDdrWYA+o2ORY39QB
2Wx+7xZsycHNgidTdWC/0Kfgbuy03bxTJVk68MflVsJX7Fuk4mfqxTrQbl0V
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
D0p8l4ffYf8f+wQ3uQ==
            "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.24, 0.6, 0.8], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
       TagBox["\"t(s)\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"x(t)\"", HoldForm], TraditionalForm]}, AxesOrigin -> {0, 0}, 
    DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, DisplayFunction -> 
    Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotInteractivity :> True, 
    PlotRange -> {All, All}, PlotRangeClipping -> True, 
    PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"x(t)\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.24, 0.6, 0.8], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 
                 TemplateBox[<|"color" -> RGBColor[0.24, 0.6, 0.8]|>, 
                  "RGBColorSwatchTemplate"], ",", 
                 RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], "}"}],
            ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.967093499636509*^9, {3.967093582233676*^9, 3.967093599569334*^9}},
 CellLabel->
  "Out[182]=",ExpressionUUID->"9417305d-c13a-4dc1-9cfe-728991bb3951"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1425, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.3 for Linux x86 (64-bit) (July 8, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b387c437-0092-42e9-86fe-3ade8539123a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 189, 6, 102, "Section",ExpressionUUID->"f7b6a2c8-89db-405b-843c-8caa18256170"],
Cell[768, 30, 221, 4, 29, "Input",ExpressionUUID->"b45454e5-9f7b-416a-808a-1c1b2263bcec"],
Cell[CellGroupData[{
Cell[1014, 38, 202, 3, 51, "Code",ExpressionUUID->"8cbfe90c-3d98-4a8a-9d95-a18f7c4dc40e"],
Cell[1219, 43, 172, 2, 33, "Output",ExpressionUUID->"7d28bb19-ea3d-47be-b83c-5872f7779d9c"]
}, Open  ]],
Cell[1406, 48, 221, 4, 29, "Input",ExpressionUUID->"7328dd7f-b1cc-4c7a-b2ff-e6831860e4f5"],
Cell[1630, 54, 71, 0, 33, "Text",ExpressionUUID->"6627f1ba-f703-43cf-93f2-3f797db453c6"],
Cell[1704, 56, 534, 11, 77, "Text",ExpressionUUID->"99fc19e5-4790-4dd9-b3c6-3907dfff341b"],
Cell[CellGroupData[{
Cell[2263, 71, 373, 8, 90, "Code",ExpressionUUID->"a18ffb66-d8c0-4f2c-9feb-f33b1a65f7c0"],
Cell[2639, 81, 166, 2, 33, "Output",ExpressionUUID->"0cec3b8b-3a5b-4ab9-9cf6-6c9860c157c5"]
}, Open  ]],
Cell[2820, 86, 612, 11, 77, "Text",ExpressionUUID->"68d47afa-4370-4aac-b04d-bbdf62185b6a"],
Cell[CellGroupData[{
Cell[3457, 101, 1407, 36, 243, "Code",ExpressionUUID->"465a2140-4587-464c-a859-e2c9ea6b80a1"],
Cell[4867, 139, 747, 22, 76, "Output",ExpressionUUID->"f68eb540-2ee6-43c3-b5e1-c99c2c7c08f3"],
Cell[5617, 163, 263, 5, 33, "Output",ExpressionUUID->"b3dfe93d-18f5-4b2b-b7c0-c79e7ce5784a"],
Cell[5883, 170, 885, 28, 83, "Output",ExpressionUUID->"d19b03fc-7741-4267-a25d-6dde69150ea6"],
Cell[6771, 200, 747, 22, 76, "Output",ExpressionUUID->"14f39e49-bf9a-4fa5-997a-4a76772d19ea"],
Cell[7521, 224, 771, 24, 76, "Output",ExpressionUUID->"7dd66d6b-cee8-4d86-b116-e384111443ca"]
}, Open  ]],
Cell[8307, 251, 185, 3, 33, "Text",ExpressionUUID->"67116ff6-04ad-4e1d-a3dd-87e1e148837d"],
Cell[CellGroupData[{
Cell[8517, 258, 1564, 37, 254, "Code",ExpressionUUID->"0a1ad94e-2fc8-4706-82ae-8cf6f0d696c8"],
Cell[10084, 297, 667, 13, 368, "Output",ExpressionUUID->"8b94b42f-522d-4dde-9e96-2185f06baa7c"]
}, Open  ]],
Cell[10766, 313, 741, 13, 77, "Text",ExpressionUUID->"c4a0116c-3f7e-4a5c-a25f-ac2160bf16d0"],
Cell[CellGroupData[{
Cell[11532, 330, 2143, 60, 245, "Code",ExpressionUUID->"e55f2e17-525d-47ff-ae5d-50445a8e3588"],
Cell[13678, 392, 869, 26, 76, "Output",ExpressionUUID->"0c8bc4b1-cbe3-4792-8f70-a8b39a099d90"],
Cell[14550, 420, 869, 26, 76, "Output",ExpressionUUID->"e59fc157-6761-46a4-84a9-b928c7d37dc9"],
Cell[15422, 448, 803, 23, 76, "Output",ExpressionUUID->"bf97da1b-9cb7-4265-89a5-ddf50d797539"],
Cell[16228, 473, 397, 10, 33, "Output",ExpressionUUID->"8705c10d-b8e8-478a-8b14-188c0f5f02c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16662, 488, 630, 16, 132, "Code",ExpressionUUID->"51bcd520-0a86-4fe8-a18b-c2b7fab377dc"],
Cell[17295, 506, 211, 5, 33, "Output",ExpressionUUID->"deab3c4a-1ad2-47d9-aaa6-a95c84e86d32"],
Cell[17509, 513, 211, 5, 33, "Output",ExpressionUUID->"aa398845-9325-4581-8299-9428c680c88c"],
Cell[17723, 520, 463, 15, 34, "Output",ExpressionUUID->"efac51f9-a148-4c69-8e21-fa66e8a31a42"],
Cell[18189, 537, 465, 15, 34, "Output",ExpressionUUID->"d4156037-0be5-4f99-b7f3-795d3e48dd8a"],
Cell[18657, 554, 300, 8, 34, "Output",ExpressionUUID->"4f2abcab-05b6-438d-8511-2ff14aa91de0"]
}, Open  ]],
Cell[18972, 565, 843, 15, 143, "Text",ExpressionUUID->"f2fa3828-5345-4256-9956-00eb67b317ed"],
Cell[CellGroupData[{
Cell[19840, 584, 1035, 32, 132, "Code",ExpressionUUID->"74f02118-f3f8-45ec-a8ac-40766551f40e"],
Cell[20878, 618, 406, 10, 33, "Output",ExpressionUUID->"3c2f9dc1-7a44-4f19-bc01-f378bd7b1270"],
Cell[21287, 630, 431, 11, 45, "Output",ExpressionUUID->"20903092-f53d-4c84-9546-bf9b228fde57"],
Cell[21721, 643, 274, 5, 33, "Output",ExpressionUUID->"3f1c0f4c-e7fa-4167-9103-b14a88e324fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22032, 653, 553, 16, 52, "Code",ExpressionUUID->"cb5a4b3f-60ad-412d-b48f-fa683314ea36"],
Cell[22588, 671, 319, 9, 34, "Output",ExpressionUUID->"9e5bf10a-25d5-46a8-8274-c5eee7d2fb62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22944, 685, 185, 3, 53, "Subsection",ExpressionUUID->"45405af7-b806-4a09-a5b6-50a0f636efa3"],
Cell[CellGroupData[{
Cell[23154, 692, 2249, 62, 206, "Code",ExpressionUUID->"825beba2-987a-4034-9e37-d3be73a26de4"],
Cell[25406, 756, 15355, 317, 242, "Output",ExpressionUUID->"7d21cfb6-c349-47a6-83ff-6adcdc6c6a50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40798, 1078, 177, 3, 43, "Subsubsection",ExpressionUUID->"b919bb97-efc6-4f21-ba5a-31a6db2a33a4"],
Cell[CellGroupData[{
Cell[41000, 1085, 1921, 55, 187, "Code",ExpressionUUID->"86603c62-34b0-4a4c-8774-865accbb36d1"],
Cell[42924, 1142, 22163, 415, 65, "Output",ExpressionUUID->"e82e8a1d-7349-446d-95e2-8351a485890c"],
Cell[65090, 1559, 76252, 1315, 239, "Output",ExpressionUUID->"9417305d-c13a-4dc1-9cfe-728991bb3951"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

